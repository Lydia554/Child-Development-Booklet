{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newChild: {\n        name: '',\n        birthDate: '',\n        developmentStage: ''\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitChildForm() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.errorMessage = 'Morate biti ulogovani da biste dodali dete.';\n        return;\n      }\n      if (!this.newChild.name || !this.newChild.birthDate || !this.newChild.developmentStage) {\n        this.errorMessage = 'Sva polja su obavezna.';\n        return;\n      }\n      try {\n        // Check if a list of child IDs already exists in localStorage\n        const childrenIds = JSON.parse(localStorage.getItem('childrenIds')) || [];\n        const response = await axios.post('http://localhost:5000/api/children', this.newChild, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Podaci su uspešno poslati:', response);\n        const childId = response.data._id; // Assuming the childId is returned as _id\n        childrenIds.push(childId); // Add the new childId to the array\n\n        // Store the updated array of child IDs in localStorage\n        localStorage.setItem('childrenIds', JSON.stringify(childrenIds));\n\n        // Redirect to the child development form for the newly registered child\n        this.$router.push(`/child-development-form/${childId}`);\n      } catch (error) {\n        console.error('Greška pri registraciji deteta:', error);\n        this.errorMessage = 'Greška prilikom registracije deteta. Molimo pokušajte ponovo.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newChild","name","birthDate","developmentStage","errorMessage","methods","submitChildForm","token","localStorage","getItem","childrenIds","JSON","parse","response","post","headers","Authorization","console","log","childId","_id","push","setItem","stringify","$router","error"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildRegistrationForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"child-registration-container\">\r\n    <h2>Registracija Deteta</h2>\r\n    <form @submit.prevent=\"submitChildForm\" class=\"child-registration-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Ime:</label>\r\n        <input v-model=\"newChild.name\" type=\"text\" required placeholder=\"Unesite ime deteta\" />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"birthDate\">Datum rođenja:</label>\r\n        <input v-model=\"newChild.birthDate\" type=\"date\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"developmentStage\">Faza razvoja:</label>\r\n        <input v-model=\"newChild.developmentStage\" type=\"text\" required placeholder=\"Unesite fazu razvoja\" />\r\n      </div>\r\n\r\n      <div class=\"form-group submit-group\">\r\n        <button type=\"submit\" class=\"submit-btn\">Registruj Dete</button>\r\n      </div>\r\n    </form>\r\n\r\n    <div v-if=\"errorMessage\" class=\"error-message\">\r\n      {{ errorMessage }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newChild: {\r\n        name: '',\r\n        birthDate: '',\r\n        developmentStage: ''\r\n      },\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async submitChildForm() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'Morate biti ulogovani da biste dodali dete.';\r\n        return;\r\n      }\r\n\r\n      if (!this.newChild.name || !this.newChild.birthDate || !this.newChild.developmentStage) {\r\n        this.errorMessage = 'Sva polja su obavezna.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Check if a list of child IDs already exists in localStorage\r\n        const childrenIds = JSON.parse(localStorage.getItem('childrenIds')) || [];\r\n\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/children',\r\n          this.newChild,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        console.log('Podaci su uspešno poslati:', response);\r\n\r\n        const childId = response.data._id;  // Assuming the childId is returned as _id\r\n        childrenIds.push(childId);  // Add the new childId to the array\r\n\r\n        // Store the updated array of child IDs in localStorage\r\n        localStorage.setItem('childrenIds', JSON.stringify(childrenIds));\r\n\r\n        // Redirect to the child development form for the newly registered child\r\n        this.$router.push(`/child-development-form/${childId}`);\r\n\r\n      } catch (error) {\r\n        console.error('Greška pri registraciji deteta:', error);\r\n        this.errorMessage = 'Greška prilikom registracije deteta. Molimo pokušajte ponovo.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style lang=\"scss\">\r\n.child-registration-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f7f7f7;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .error-message {\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n    background-color: #f8d7da;\r\n    border: 1px solid #f5c6cb;\r\n    color: #721c24;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .child-registration-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .form-group {\r\n      margin-bottom: 15px;\r\n\r\n      label {\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        color: #333;\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      input {\r\n        width: 100%;\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 5px;\r\n        box-sizing: border-box;\r\n      }\r\n\r\n      input[type=\"date\"] {\r\n        padding: 8px;\r\n      }\r\n    }\r\n\r\n    .submit-group {\r\n      display: flex;\r\n      justify-content: center;\r\n      \r\n      .submit-btn {\r\n        padding: 12px 20px;\r\n        font-size: 16px;\r\n        color: #fff;\r\n        background-color: #007bff;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s ease;\r\n\r\n        &:hover {\r\n          background-color: #0056b3;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA+BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,gBAAgB,EAAE;MACpB,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,IAAI,CAACH,YAAW,GAAI,6CAA6C;QACjE;MACF;MAEA,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAACC,IAAG,IAAK,CAAC,IAAI,CAACD,QAAQ,CAACE,SAAQ,IAAK,CAAC,IAAI,CAACF,QAAQ,CAACG,gBAAgB,EAAE;QACtF,IAAI,CAACC,YAAW,GAAI,wBAAwB;QAC5C;MACF;MAEA,IAAI;QACF;QACA,MAAMM,WAAU,GAAIC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;QAEzE,MAAMI,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAC/B,oCAAoC,EACpC,IAAI,CAACd,QAAQ,EACb;UACEe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUT,KAAK;UAChC;QACF,CACF,CAAC;QAEDU,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAAC;QAEnD,MAAMM,OAAM,GAAIN,QAAQ,CAACd,IAAI,CAACqB,GAAG,EAAG;QACpCV,WAAW,CAACW,IAAI,CAACF,OAAO,CAAC,EAAG;;QAE5B;QACAX,YAAY,CAACc,OAAO,CAAC,aAAa,EAAEX,IAAI,CAACY,SAAS,CAACb,WAAW,CAAC,CAAC;;QAEhE;QACA,IAAI,CAACc,OAAO,CAACH,IAAI,CAAC,2BAA2BF,OAAO,EAAE,CAAC;MAEzD,EAAE,OAAOM,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAI,CAACrB,YAAW,GAAI,+DAA+D;MACrF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}