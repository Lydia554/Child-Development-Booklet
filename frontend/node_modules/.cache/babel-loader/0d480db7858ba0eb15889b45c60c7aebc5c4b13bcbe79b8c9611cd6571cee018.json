{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/authStore';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordVisible: false,\n      errorMessage: '',\n      emailError: null,\n      passwordError: null,\n      nameError: null,\n      hasErrors: false\n    };\n  },\n  methods: {\n    validateEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!this.email.trim()) {\n        this.emailError = 'Email je obavezan.';\n        this.hasErrors = true;\n      } else if (!emailRegex.test(this.email)) {\n        this.emailError = 'Unesite validan email.';\n        this.hasErrors = true;\n      } else {\n        this.emailError = null;\n      }\n    },\n    validatePassword() {\n      if (!this.password.trim()) {\n        this.passwordError = 'Lozinka je obavezna.';\n        this.hasErrors = true;\n      } else if (this.password.length < 6) {\n        this.passwordError = 'Lozinka mora imati najmanje 6 karaktera.';\n        this.hasErrors = true;\n      } else {\n        this.passwordError = null;\n      }\n    },\n    validateName() {\n      if (!this.name.trim()) {\n        this.nameError = 'Ime je obavezno.';\n        this.hasErrors = true;\n      } else {\n        this.nameError = null;\n      }\n    },\n    async registerUser() {\n      this.validateEmail();\n      this.validatePassword();\n      this.validateName();\n      if (this.hasErrors) {\n        return;\n      }\n      try {\n        const registerResponse = await axios.post('http://localhost:5000/api/users/register', {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Registration successful:', registerResponse.data);\n        const loginResponse = await axios.post('http://localhost:5000/api/users/login', {\n          email: this.email,\n          password: this.password\n        });\n        const token = loginResponse.data.token;\n        sessionStorage.setItem('token', token);\n        const authStore = useAuthStore();\n        authStore.login(token);\n        this.$router.push('/child-registration');\n      } catch (error) {\n        console.error('GreÅ¡ka pri registraciji:', error);\n        if (error.response) {\n          console.log('Error response data:', error.response.data);\n          this.errorMessage = error.response.data.message || 'Server error occurred';\n        } else if (error.request) {\n          this.errorMessage = 'No response from server';\n        } else {\n          this.errorMessage = error.message;\n        }\n      }\n    },\n    navigateToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["useAuthStore","axios","data","name","email","password","passwordVisible","errorMessage","emailError","passwordError","nameError","hasErrors","methods","validateEmail","emailRegex","trim","test","validatePassword","length","validateName","registerUser","registerResponse","post","headers","console","log","loginResponse","token","sessionStorage","setItem","authStore","login","$router","push","error","response","message","request","navigateToLogin"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\SignupPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"signup-container\">\r\n    <h2>Registrujte se</h2>\r\n    <form @submit.prevent=\"registerUser\">\r\n     \r\n      <input\r\n        type=\"email\"\r\n        v-model=\"email\"\r\n        placeholder=\"Email\"\r\n        required\r\n        @blur=\"validateEmail\"\r\n      />\r\n      <div v-if=\"emailError\" class=\"error-message\">{{ emailError }}</div>\r\n\r\n     \r\n      <div class=\"password-container\">\r\n        <input\r\n          :type=\"passwordVisible ? 'text' : 'password'\"\r\n          v-model=\"password\"\r\n          placeholder=\"Lozinka\"\r\n          required\r\n          @blur=\"validatePassword\"\r\n        />\r\n        <label>\r\n          <input type=\"checkbox\" v-model=\"passwordVisible\" /> PrikaÅ¾i lozinku\r\n        </label>\r\n        <div v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</div>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"name\"\r\n        placeholder=\"Ime\"\r\n        required\r\n        @blur=\"validateName\"\r\n      />\r\n      <div v-if=\"nameError\" class=\"error-message\">{{ nameError }}</div>\r\n\r\n      <button type=\"submit\" :disabled=\"hasErrors\">Registrujte se</button>\r\n    </form>\r\n    <div class=\"login-link\">\r\n      <p>VeÄ‡ imate nalog? <button @click=\"navigateToLogin\">Ulogujte se</button></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useAuthStore } from '@/stores/authStore';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      passwordVisible: false,\r\n      errorMessage: '',\r\n\r\n   \r\n      emailError: null,\r\n      passwordError: null,\r\n      nameError: null,\r\n      hasErrors: false,\r\n    };\r\n  },\r\n  methods: {\r\n    \r\n    validateEmail() {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!this.email.trim()) {\r\n        this.emailError = 'Email je obavezan.';\r\n        this.hasErrors = true;\r\n      } else if (!emailRegex.test(this.email)) {\r\n        this.emailError = 'Unesite validan email.';\r\n        this.hasErrors = true;\r\n      } else {\r\n        this.emailError = null;\r\n      }\r\n    },\r\n\r\n    validatePassword() {\r\n      if (!this.password.trim()) {\r\n        this.passwordError = 'Lozinka je obavezna.';\r\n        this.hasErrors = true;\r\n      } else if (this.password.length < 6) {\r\n        this.passwordError = 'Lozinka mora imati najmanje 6 karaktera.';\r\n        this.hasErrors = true;\r\n      } else {\r\n        this.passwordError = null;\r\n      }\r\n    },\r\n\r\n    validateName() {\r\n      if (!this.name.trim()) {\r\n        this.nameError = 'Ime je obavezno.';\r\n        this.hasErrors = true;\r\n      } else {\r\n        this.nameError = null;\r\n      }\r\n    },\r\n\r\n    async registerUser() {\r\n      \r\n      this.validateEmail();\r\n      this.validatePassword();\r\n      this.validateName();\r\n\r\n      if (this.hasErrors) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const registerResponse = await axios.post('http://localhost:5000/api/users/register', {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        console.log('Registration successful:', registerResponse.data);\r\n\r\n        const loginResponse = await axios.post('http://localhost:5000/api/users/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        const token = loginResponse.data.token;\r\n        sessionStorage.setItem('token', token);\r\n\r\n        const authStore = useAuthStore();\r\n        authStore.login(token);\r\n\r\n        this.$router.push('/child-registration');\r\n        \r\n      } catch (error) {\r\n        console.error('GreÅ¡ka pri registraciji:', error);\r\n        if (error.response) {\r\n          console.log('Error response data:', error.response.data);\r\n          this.errorMessage = error.response.data.message || 'Server error occurred';\r\n        } else if (error.request) {\r\n          this.errorMessage = 'No response from server';\r\n        } else {\r\n          this.errorMessage = error.message;\r\n        }\r\n      }\r\n    },\r\n\r\n    navigateToLogin() {\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n$primary-color: #007bff;\r\n$primary-hover: #0056b3;\r\n$background-light: #ffffff;\r\n$border-color: #ddd;\r\n$text-color: #333;\r\n$error-color: red;\r\n\r\n.signup-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 40px;\r\n  background-color: $background-light;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  color: $text-color;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\ninput {\r\n  padding: 12px;\r\n  border-radius: 6px;\r\n  border: 1px solid $border-color;\r\n  font-size: 14px;\r\n  width: 100%;\r\n  transition: border-color 0.3s;\r\n\r\n  &:focus {\r\n    border-color: $primary-color;\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.password-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  label {\r\n    margin-top: 5px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.error-message {\r\n  color: $error-color;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nbutton {\r\n  background-color: $primary-color;\r\n  color: white;\r\n  padding: 14px 20px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: $primary-hover;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n.login-link {\r\n  margin-top: 20px;\r\n\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    color: $primary-color;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    text-decoration: underline;\r\n\r\n    &:hover {\r\n      color: $primary-hover;\r\n    }\r\n  }\r\n}\r\n\r\n/* ðŸ“± Mobile Styles */\r\n@media (max-width: 768px) {\r\n  .signup-container {\r\n    padding: 30px;\r\n  }\r\n\r\n  input {\r\n    font-size: 16px;\r\n  }\r\n\r\n  button {\r\n    font-size: 18px;\r\n    padding: 16px;\r\n  }\r\n}\r\n\r\n/* ðŸ“± Small Screens (Max 480px) */\r\n@media (max-width: 480px) {\r\n  .signup-container {\r\n    padding: 25px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 22px;\r\n  }\r\n\r\n  input {\r\n    font-size: 15px;\r\n    padding: 10px;\r\n  }\r\n\r\n  button {\r\n    font-size: 16px;\r\n    padding: 14px;\r\n  }\r\n}\r\n\r\n/* ðŸ“± Ultra-Small Screens (Max 360px) */\r\n@media (max-width: 360px) {\r\n  .signup-container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  input {\r\n    font-size: 14px;\r\n    padding: 10px;\r\n  }\r\n\r\n  button {\r\n    font-size: 15px;\r\n    padding: 12px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA+CA,SAASA,YAAW,QAAS,oBAAoB;AACjD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,EAAE;MAGhBC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IAEPC,aAAaA,CAAA,EAAG;MACd,MAAMC,UAAS,GAAI,4BAA4B;MAC/C,IAAI,CAAC,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;QACtB,IAAI,CAACP,UAAS,GAAI,oBAAoB;QACtC,IAAI,CAACG,SAAQ,GAAI,IAAI;MACvB,OAAO,IAAI,CAACG,UAAU,CAACE,IAAI,CAAC,IAAI,CAACZ,KAAK,CAAC,EAAE;QACvC,IAAI,CAACI,UAAS,GAAI,wBAAwB;QAC1C,IAAI,CAACG,SAAQ,GAAI,IAAI;MACvB,OAAO;QACL,IAAI,CAACH,UAAS,GAAI,IAAI;MACxB;IACF,CAAC;IAEDS,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACZ,QAAQ,CAACU,IAAI,CAAC,CAAC,EAAE;QACzB,IAAI,CAACN,aAAY,GAAI,sBAAsB;QAC3C,IAAI,CAACE,SAAQ,GAAI,IAAI;MACvB,OAAO,IAAI,IAAI,CAACN,QAAQ,CAACa,MAAK,GAAI,CAAC,EAAE;QACnC,IAAI,CAACT,aAAY,GAAI,0CAA0C;QAC/D,IAAI,CAACE,SAAQ,GAAI,IAAI;MACvB,OAAO;QACL,IAAI,CAACF,aAAY,GAAI,IAAI;MAC3B;IACF,CAAC;IAEDU,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAAChB,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;QACrB,IAAI,CAACL,SAAQ,GAAI,kBAAkB;QACnC,IAAI,CAACC,SAAQ,GAAI,IAAI;MACvB,OAAO;QACL,IAAI,CAACD,SAAQ,GAAI,IAAI;MACvB;IACF,CAAC;IAED,MAAMU,YAAYA,CAAA,EAAG;MAEnB,IAAI,CAACP,aAAa,CAAC,CAAC;MACpB,IAAI,CAACI,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACE,YAAY,CAAC,CAAC;MAEnB,IAAI,IAAI,CAACR,SAAS,EAAE;QAClB;MACF;MAEA,IAAI;QACF,MAAMU,gBAAe,GAAI,MAAMpB,KAAK,CAACqB,IAAI,CAAC,0CAA0C,EAAE;UACpFnB,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,EAAE;UACDkB,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,gBAAgB,CAACnB,IAAI,CAAC;QAE9D,MAAMwB,aAAY,GAAI,MAAMzB,KAAK,CAACqB,IAAI,CAAC,uCAAuC,EAAE;UAC9ElB,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAMsB,KAAI,GAAID,aAAa,CAACxB,IAAI,CAACyB,KAAK;QACtCC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;QAEtC,MAAMG,SAAQ,GAAI9B,YAAY,CAAC,CAAC;QAChC8B,SAAS,CAACC,KAAK,CAACJ,KAAK,CAAC;QAEtB,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;MAE1C,EAAE,OAAOC,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAIA,KAAK,CAACC,QAAQ,EAAE;UAClBX,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAES,KAAK,CAACC,QAAQ,CAACjC,IAAI,CAAC;UACxD,IAAI,CAACK,YAAW,GAAI2B,KAAK,CAACC,QAAQ,CAACjC,IAAI,CAACkC,OAAM,IAAK,uBAAuB;QAC5E,OAAO,IAAIF,KAAK,CAACG,OAAO,EAAE;UACxB,IAAI,CAAC9B,YAAW,GAAI,yBAAyB;QAC/C,OAAO;UACL,IAAI,CAACA,YAAW,GAAI2B,KAAK,CAACE,OAAO;QACnC;MACF;IACF,CAAC;IAEDE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}