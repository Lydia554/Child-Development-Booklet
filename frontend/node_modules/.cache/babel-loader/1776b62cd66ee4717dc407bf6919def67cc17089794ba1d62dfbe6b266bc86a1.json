{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/authStore';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordVisible: false,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async registerUser() {\n      try {\n        // 1. Register the user\n        const registerResponse = await axios.post('http://localhost:5000/api/users/register', {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Registration successful:', registerResponse.data);\n\n        // 2. Login immediately after registration\n        const loginResponse = await axios.post('http://localhost:5000/api/users/login', {\n          email: this.email,\n          password: this.password\n        });\n\n        // 3. Store the token and authenticate\n        const token = loginResponse.data.token;\n        sessionStorage.setItem('token', token);\n        const authStore = useAuthStore();\n        authStore.login(token);\n\n        // 4. Redirect to child registration\n        this.$router.push('/child-registration');\n      } catch (error) {\n        console.error('Greška pri registraciji:', error);\n        if (error.response) {\n          console.log('Error response data:', error.response.data);\n          this.errorMessage = error.response.data.message || 'Server error occurred';\n        } else if (error.request) {\n          this.errorMessage = 'No response from server';\n        } else {\n          this.errorMessage = error.message;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["useAuthStore","axios","data","name","email","password","passwordVisible","errorMessage","methods","registerUser","registerResponse","post","headers","console","log","loginResponse","token","sessionStorage","setItem","authStore","login","$router","push","error","response","message","request"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\SignupPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"signup-container\">\r\n    <h2>Registrujte se</h2>\r\n    <form @submit.prevent=\"registerUser\">\r\n      <input type=\"email\" v-model=\"email\" placeholder=\"Email\" required />\r\n      <div class=\"password-container\">\r\n        <input\r\n          :type=\"passwordVisible ? 'text' : 'password'\"\r\n          v-model=\"password\"\r\n          placeholder=\"Lozinka\"\r\n          required\r\n        />\r\n        <label>\r\n          <input type=\"checkbox\" v-model=\"passwordVisible\" /> Prikaži lozinku\r\n        </label>\r\n      </div>\r\n      <input type=\"text\" v-model=\"name\" placeholder=\"Ime\" required />\r\n      <button type=\"submit\">Registrujte se</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useAuthStore } from '@/stores/authStore';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      passwordVisible: false,\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async registerUser() {\r\n      try {\r\n        // 1. Register the user\r\n        const registerResponse = await axios.post('http://localhost:5000/api/users/register', {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        console.log('Registration successful:', registerResponse.data);\r\n\r\n        // 2. Login immediately after registration\r\n        const loginResponse = await axios.post('http://localhost:5000/api/users/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        // 3. Store the token and authenticate\r\n        const token = loginResponse.data.token;\r\n        sessionStorage.setItem('token', token);\r\n        \r\n        const authStore = useAuthStore();\r\n        authStore.login(token);\r\n\r\n        // 4. Redirect to child registration\r\n        this.$router.push('/child-registration');\r\n        \r\n      } catch (error) {\r\n        console.error('Greška pri registraciji:', error);\r\n        if (error.response) {\r\n          console.log('Error response data:', error.response.data);\r\n          this.errorMessage = error.response.data.message || 'Server error occurred';\r\n        } else if (error.request) {\r\n          this.errorMessage = 'No response from server';\r\n        } else {\r\n          this.errorMessage = error.message;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n  <style scoped>\r\n  .signup-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 40px;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  \r\n  input {\r\n    padding: 12px;\r\n    border-radius: 6px;\r\n    border: 1px solid #ddd;\r\n    font-size: 14px;\r\n    width: 100%;\r\n    transition: border-color 0.3s;\r\n  }\r\n  \r\n  input:focus {\r\n    border-color: #007bff;\r\n    outline: none;\r\n  }\r\n  \r\n  button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    border-radius: 6px;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n    width: 100%;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  button:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  .password-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  label {\r\n    margin-top: 5px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .signup-container {\r\n      padding: 30px;\r\n    }\r\n  \r\n    input {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";AAuBA,SAASA,YAAW,QAAS,oBAAoB;AACjD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF;QACA,MAAMC,gBAAe,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,0CAA0C,EAAE;UACpFR,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,EAAE;UACDO,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,gBAAgB,CAACR,IAAI,CAAC;;QAE9D;QACA,MAAMa,aAAY,GAAI,MAAMd,KAAK,CAACU,IAAI,CAAC,uCAAuC,EAAE;UAC9EP,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACA,MAAMW,KAAI,GAAID,aAAa,CAACb,IAAI,CAACc,KAAK;QACtCC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;QAEtC,MAAMG,SAAQ,GAAInB,YAAY,CAAC,CAAC;QAChCmB,SAAS,CAACC,KAAK,CAACJ,KAAK,CAAC;;QAEtB;QACA,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;MAE1C,EAAE,OAAOC,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAIA,KAAK,CAACC,QAAQ,EAAE;UAClBX,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAES,KAAK,CAACC,QAAQ,CAACtB,IAAI,CAAC;UACxD,IAAI,CAACK,YAAW,GAAIgB,KAAK,CAACC,QAAQ,CAACtB,IAAI,CAACuB,OAAM,IAAK,uBAAuB;QAC5E,OAAO,IAAIF,KAAK,CAACG,OAAO,EAAE;UACxB,IAAI,CAACnB,YAAW,GAAI,yBAAyB;QAC/C,OAAO;UACL,IAAI,CAACA,YAAW,GAAIgB,KAAK,CAACE,OAAO;QACnC;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}