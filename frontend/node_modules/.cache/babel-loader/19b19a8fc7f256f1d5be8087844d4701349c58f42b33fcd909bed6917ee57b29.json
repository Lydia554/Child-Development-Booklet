{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/authStore'; // Add this import\n\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordVisible: false,\n      errorMessage: '' // Add error message\n    };\n  },\n  methods: {\n    async registerUser() {\n      try {\n        const response = await axios.post('http://localhost:5000/api/users/register', {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        });\n\n        // Store the token immediately after registration\n        const token = response.data.token;\n        sessionStorage.setItem('token', token);\n\n        // Initialize auth store\n        const authStore = useAuthStore();\n        authStore.login(token);\n        this.$router.push('/child-registration');\n      } catch (error) {\n        console.error('Greška pri registraciji:', error);\n        this.errorMessage = error.response?.data?.message || 'Greška pri registraciji. Pokušajte ponovo.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["useAuthStore","data","name","email","password","passwordVisible","errorMessage","methods","registerUser","response","axios","post","token","sessionStorage","setItem","authStore","login","$router","push","error","console","message"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\SignupPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"signup-container\">\r\n    <h2>Registrujte se</h2>\r\n    <form @submit.prevent=\"registerUser\">\r\n      <input type=\"email\" v-model=\"email\" placeholder=\"Email\" required />\r\n      <div class=\"password-container\">\r\n        <input\r\n          :type=\"passwordVisible ? 'text' : 'password'\"\r\n          v-model=\"password\"\r\n          placeholder=\"Lozinka\"\r\n          required\r\n        />\r\n        <label>\r\n          <input type=\"checkbox\" v-model=\"passwordVisible\" /> Prikaži lozinku\r\n        </label>\r\n      </div>\r\n      <input type=\"text\" v-model=\"name\" placeholder=\"Ime\" required />\r\n      <button type=\"submit\">Registrujte se</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useAuthStore } from '@/stores/authStore';  // Add this import\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      passwordVisible: false,\r\n      errorMessage: '',  // Add error message\r\n    };\r\n  },\r\n  methods: {\r\n    async registerUser() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/users/register', {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        // Store the token immediately after registration\r\n        const token = response.data.token;\r\n        sessionStorage.setItem('token', token);\r\n        \r\n        // Initialize auth store\r\n        const authStore = useAuthStore();\r\n        authStore.login(token);\r\n\r\n        this.$router.push('/child-registration');\r\n      } catch (error) {\r\n        console.error('Greška pri registraciji:', error);\r\n        this.errorMessage = error.response?.data?.message || 'Greška pri registraciji. Pokušajte ponovo.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n  <style scoped>\r\n  .signup-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 40px;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  \r\n  input {\r\n    padding: 12px;\r\n    border-radius: 6px;\r\n    border: 1px solid #ddd;\r\n    font-size: 14px;\r\n    width: 100%;\r\n    transition: border-color 0.3s;\r\n  }\r\n  \r\n  input:focus {\r\n    border-color: #007bff;\r\n    outline: none;\r\n  }\r\n  \r\n  button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    border-radius: 6px;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n    width: 100%;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  button:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  .password-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  label {\r\n    margin-top: 5px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .signup-container {\r\n      padding: 30px;\r\n    }\r\n  \r\n    input {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";AAuBA,SAASA,YAAW,QAAS,oBAAoB,EAAG;;AAEpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,EAAE,CAAG;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACC,IAAI,CAAC,0CAA0C,EAAE;UAC5ET,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACA,MAAMQ,KAAI,GAAIH,QAAQ,CAACR,IAAI,CAACW,KAAK;QACjCC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;QAEtC;QACA,MAAMG,SAAQ,GAAIf,YAAY,CAAC,CAAC;QAChCe,SAAS,CAACC,KAAK,CAACJ,KAAK,CAAC;QAEtB,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;MAC1C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACb,YAAW,GAAIa,KAAK,CAACV,QAAQ,EAAER,IAAI,EAAEoB,OAAM,IAAK,4CAA4C;MACnG;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}