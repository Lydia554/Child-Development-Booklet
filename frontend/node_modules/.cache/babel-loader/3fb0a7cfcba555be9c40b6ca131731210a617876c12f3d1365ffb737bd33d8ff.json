{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      childName: null,\n      childAge: null,\n      developmentData: [],\n      milestoneData: [],\n      availablePeriods: [],\n      selectedPeriod: null\n    };\n  },\n  computed: {\n    currentPeriodDevelopment() {\n      return this.selectedPeriod ? this.developmentData.find(d => d.startAge === this.selectedPeriod.start && d.endAge === this.selectedPeriod.end) : null;\n    },\n    currentPeriodMilestones() {\n      return this.selectedPeriod ? this.milestoneData.filter(m => m.age >= this.selectedPeriod.start && m.age < this.selectedPeriod.end) : [];\n    }\n  },\n  methods: {\n    async fetchChildData(childId) {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        const response = await axios.get(`http://localhost:5000/api/children/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data) {\n          this.childName = response.data.name;\n          this.childAge = this.calculateAgeInMonths(response.data.birthDate);\n          this.generateAvailablePeriods();\n        }\n      } catch (error) {\n        console.error(\"‚ùå Gre≈°ka pri dobijanju podataka o detetu:\", error);\n      }\n    },\n    calculateAgeInMonths(birthDate) {\n      if (!birthDate) return 0;\n      const birth = new Date(birthDate);\n      const now = new Date();\n      return (now.getFullYear() - birth.getFullYear()) * 12 + (now.getMonth() - birth.getMonth());\n    },\n    generateAvailablePeriods() {\n      if (this.childAge === null) return;\n      this.availablePeriods = [];\n      for (let i = 0; i <= 72; i += 6) {\n        this.availablePeriods.push({\n          start: i,\n          end: i + 6\n        });\n      }\n    },\n    selectPeriod(period) {\n      this.selectedPeriod = period;\n    },\n    formatPeriod(start, end) {\n      return `${start}-${end} meseci`;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString(\"sr-RS\");\n    },\n    getPeriodClass(period) {\n      if (this.isCurrentPeriod(period)) return \"period-button current\";\n      if (this.isFilledPeriod(period)) return \"period-button filled\";\n      if (this.isFuturePeriod(period)) return \"period-button future\";\n      return \"period-button past\";\n    },\n    isCurrentPeriod(period) {\n      return this.childAge >= period.start && this.childAge < period.end;\n    },\n    isFilledPeriod(period) {\n      return this.childAge >= period.end;\n    },\n    isFuturePeriod(period) {\n      return this.childAge < period.start;\n    }\n  },\n  async created() {\n    try {\n      const childId = this.$route.params.childId;\n      if (childId) {\n        await this.fetchChildData(childId);\n      }\n    } catch (error) {\n      console.error(\"‚ùå Gre≈°ka u created():\", error);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","childName","childAge","developmentData","milestoneData","availablePeriods","selectedPeriod","computed","currentPeriodDevelopment","find","d","startAge","start","endAge","end","currentPeriodMilestones","filter","m","age","methods","fetchChildData","childId","token","sessionStorage","getItem","response","get","headers","Authorization","name","calculateAgeInMonths","birthDate","generateAvailablePeriods","error","console","birth","Date","now","getFullYear","getMonth","i","push","selectPeriod","period","formatPeriod","formatDate","date","toLocaleDateString","getPeriodClass","isCurrentPeriod","isFilledPeriod","isFuturePeriod","created","$route","params"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <h2>Praƒáenje Razvoja za {{ childName || \"Nepoznato dete\" }}</h2>\r\n\r\n    <!-- Child Info -->\r\n    <div class=\"child-info\">\r\n      <h3>{{ childName }}</h3>\r\n      <p><strong>Starost:</strong> {{ childAge ? childAge + \" meseci\" : \"Nepoznata starost\" }}</p>\r\n    </div>\r\n\r\n    <!-- Period Selector -->\r\n    <div class=\"period-selector\">\r\n      <h3>Izaberite period:</h3>\r\n      <div class=\"periods-grid\">\r\n        <button\r\n          v-for=\"period in availablePeriods\"\r\n          :key=\"`${period.start}-${period.end}`\"\r\n          :class=\"getPeriodClass(period)\"\r\n          @click=\"selectPeriod(period)\"\r\n          :disabled=\"isFuturePeriod(period)\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isFilledPeriod(period)\">‚úî Ispunjeno</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\">üü¢ Trenutni period</span>\r\n          <span v-else-if=\"isFuturePeriod(period)\">üö´ Nedostupan</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Display Development & Milestones -->\r\n    <div v-if=\"selectedPeriod\" class=\"period-data\">\r\n      <h3>Razvoj za period: {{ formatPeriod(selectedPeriod.start, selectedPeriod.end) }}</h3>\r\n\r\n      <!-- Development Data -->\r\n      <div v-if=\"currentPeriodDevelopment\" class=\"development-section\">\r\n        <h4>Razvoj deteta</h4>\r\n        <div class=\"development-details\">\r\n          <div class=\"development-item\">\r\n            <h5>Fiziƒçki razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.physicalDevelopment || \"Nema podataka\" }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Emocionalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.emotionalDevelopment || \"Nema podataka\" }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Intelektualni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.intellectualDevelopment || \"Nema podataka\" }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Socijalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.socialDevelopment || \"Nema podataka\" }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Milestones -->\r\n      <div v-if=\"currentPeriodMilestones.length\" class=\"milestones-section\">\r\n        <h4>Prekretnice za ovaj period</h4>\r\n        <div class=\"milestone-list\">\r\n          <div v-for=\"milestone in currentPeriodMilestones\" :key=\"milestone._id\" class=\"milestone-item\">\r\n            <h3>{{ milestone.milestoneType }} - {{ formatDate(milestone.milestoneDate) }}</h3>\r\n            <p><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n            <p><strong>Napomene:</strong> {{ milestone.notes }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-else class=\"no-records\">\r\n        <p>Nema unetih podataka za ovaj period.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      childName: null,\r\n      childAge: null,\r\n      developmentData: [],\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      selectedPeriod: null,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    currentPeriodDevelopment() {\r\n      return this.selectedPeriod\r\n        ? this.developmentData.find(\r\n            (d) =>\r\n              d.startAge === this.selectedPeriod.start &&\r\n              d.endAge === this.selectedPeriod.end\r\n          )\r\n        : null;\r\n    },\r\n\r\n    currentPeriodMilestones() {\r\n      return this.selectedPeriod\r\n        ? this.milestoneData.filter(\r\n            (m) =>\r\n              m.age >= this.selectedPeriod.start &&\r\n              m.age < this.selectedPeriod.end\r\n          )\r\n        : [];\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async fetchChildData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/children/${childId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        if (response.data) {\r\n          this.childName = response.data.name;\r\n          this.childAge = this.calculateAgeInMonths(response.data.birthDate);\r\n          this.generateAvailablePeriods();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"‚ùå Gre≈°ka pri dobijanju podataka o detetu:\", error);\r\n      }\r\n    },\r\n\r\n    calculateAgeInMonths(birthDate) {\r\n      if (!birthDate) return 0;\r\n      const birth = new Date(birthDate);\r\n      const now = new Date();\r\n      return (now.getFullYear() - birth.getFullYear()) * 12 + (now.getMonth() - birth.getMonth());\r\n    },\r\n\r\n    generateAvailablePeriods() {\r\n      if (this.childAge === null) return;\r\n\r\n      this.availablePeriods = [];\r\n      for (let i = 0; i <= 72; i += 6) {\r\n        this.availablePeriods.push({ start: i, end: i + 6 });\r\n      }\r\n    },\r\n\r\n    selectPeriod(period) {\r\n      this.selectedPeriod = period;\r\n    },\r\n\r\n    formatPeriod(start, end) {\r\n      return `${start}-${end} meseci`;\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString(\"sr-RS\");\r\n    },\r\n\r\n    getPeriodClass(period) {\r\n      if (this.isCurrentPeriod(period)) return \"period-button current\";\r\n      if (this.isFilledPeriod(period)) return \"period-button filled\";\r\n      if (this.isFuturePeriod(period)) return \"period-button future\";\r\n      return \"period-button past\";\r\n    },\r\n\r\n    isCurrentPeriod(period) {\r\n      return this.childAge >= period.start && this.childAge < period.end;\r\n    },\r\n\r\n    isFilledPeriod(period) {\r\n      return this.childAge >= period.end;\r\n    },\r\n\r\n    isFuturePeriod(period) {\r\n      return this.childAge < period.start;\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      const childId = this.$route.params.childId;\r\n      if (childId) {\r\n        await this.fetchChildData(childId);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Gre≈°ka u created():\", error);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Center everything */\r\n.development-container {\r\n  text-align: center;\r\n  padding: 30px;\r\n}\r\n\r\n/* Grid layout for periods */\r\n.periods-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr); /* 5 per row */\r\n  gap: 20px;\r\n  justify-content: center;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Style period buttons */\r\n.periods-grid button {\r\n  font-size: 18px;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n/* Different styles for each period */\r\n.period-button.current { background: #4CAF50; color: white; }\r\n.period-button.filled { background: #FFCC00; color: black; }\r\n.period-button.future { background: #CCCCCC; color: white; cursor: not-allowed; }\r\n.period-button.past { background: #FF9900; color: white; }\r\n\r\n.development-section, .milestones-section {\r\n  text-align: center;\r\n  max-width: 700px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}