{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      developmentData: [],\n      milestoneData: [],\n      availablePeriods: [],\n      childAge: 24,\n      // Hardcoded for testing\n      childBirthDate: null,\n      selectedPeriod: null\n    };\n  },\n  methods: {\n    async fetchChildAge(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/children/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.childBirthDate = new Date(response.data.birthDate);\n        this.childAge = 24; // Keeping hardcoded age for now\n        console.log('Child data:', response.data);\n      } catch (error) {\n        console.error('Error fetching child age:', error);\n      }\n    },\n    isPeriodFilled(period) {\n      return Array.isArray(this.developmentData) && this.developmentData.some(data => data.startAge === period.start && data.endAge === period.end);\n    },\n    isCurrentPeriod(period) {\n      return period.start === 24; // Current period (24 months)\n    },\n    isPastPeriod(period) {\n      return period.end <= 24; // All periods before current\n    },\n    isFuturePeriod(period) {\n      return period.start > 24; // All periods after current\n    },\n    handlePeriodClick(period) {\n      if (this.isFuturePeriod(period)) {\n        return;\n      }\n      const childId = this.$route.params.childId;\n      if (this.isPeriodFilled(period)) {\n        // View filled period data\n        this.selectedPeriod = period;\n        // Fetch development and milestone data for this period\n        this.fetchDevelopmentData(childId);\n        this.fetchMilestones(childId);\n      } else if (this.isCurrentPeriod(period) || this.isPastPeriod(period)) {\n        // Show form for adding new data\n        this.$router.push({\n          name: 'AddDevelopmentData',\n          params: {\n            childId\n          },\n          query: {\n            startAge: period.start,\n            endAge: period.end,\n            action: 'add'\n          }\n        });\n      }\n    },\n    generateAvailablePeriods() {\n      const periods = [];\n      for (let i = 0; i <= 72; i += 6) {\n        periods.push({\n          start: i,\n          end: i + 6\n        });\n      }\n      this.availablePeriods = periods;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('sr-RS');\n    },\n    formatPeriod(start, end) {\n      return `${start}-${end} meseci${this.isPastPeriod({\n        start,\n        end\n      }) && !this.isPeriodFilled({\n        start,\n        end\n      }) ? ' (Možete uneti)' : ''}`;\n    },\n    async fetchDevelopmentData(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.developmentData = response.data;\n      } catch (error) {\n        console.error('Error fetching development data:', error);\n      }\n    },\n    async fetchMilestones(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/milestones/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.milestoneData = response.data;\n      } catch (error) {\n        console.error('Error fetching milestones:', error);\n      }\n    }\n  },\n  computed: {\n    currentPeriodDevelopment() {\n      if (!this.selectedPeriod) return null;\n      return this.developmentData.find(data => data.startAge === this.selectedPeriod.start && data.endAge === this.selectedPeriod.end);\n    },\n    currentPeriodMilestones() {\n      if (!this.selectedPeriod || !this.childBirthDate) return [];\n      return this.milestoneData.filter(milestone => {\n        const milestoneDate = new Date(milestone.date);\n        const milestoneAge = Math.floor((milestoneDate - this.childBirthDate) / (1000 * 60 * 60 * 24 * 30.44));\n        return milestoneAge >= this.selectedPeriod.start && milestoneAge < this.selectedPeriod.end;\n      });\n    }\n  },\n  async created() {\n    const childId = this.$route.params.childId;\n    if (childId) {\n      await this.fetchChildAge(childId);\n      await Promise.all([this.fetchDevelopmentData(childId), this.fetchMilestones(childId)]);\n      this.generateAvailablePeriods();\n\n      // Set initial selected period based on query params or default to current\n      const queryStartAge = parseInt(this.$route.query.startAge);\n      const queryEndAge = parseInt(this.$route.query.endAge);\n      if (!isNaN(queryStartAge) && !isNaN(queryEndAge)) {\n        this.selectedPeriod = {\n          start: queryStartAge,\n          end: queryEndAge\n        };\n      } else {\n        this.selectedPeriod = this.availablePeriods.find(p => p.start === 24);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","developmentData","milestoneData","availablePeriods","childAge","childBirthDate","selectedPeriod","methods","fetchChildAge","childId","token","sessionStorage","getItem","response","get","headers","Authorization","Date","birthDate","console","log","error","isPeriodFilled","period","Array","isArray","some","startAge","start","endAge","end","isCurrentPeriod","isPastPeriod","isFuturePeriod","handlePeriodClick","$route","params","fetchDevelopmentData","fetchMilestones","$router","push","name","query","action","generateAvailablePeriods","periods","i","formatDate","date","toLocaleDateString","formatPeriod","computed","currentPeriodDevelopment","find","currentPeriodMilestones","filter","milestone","milestoneDate","milestoneAge","Math","floor","created","Promise","all","queryStartAge","parseInt","queryEndAge","isNaN","p"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <h2>Pregled Razvoja Deteta</h2>\r\n    \r\n    <!-- Period selector -->\r\n    <div class=\"available-periods\">\r\n      <h3>Dostupni periodi:</h3>\r\n      <ul>\r\n        <li v-for=\"(period, index) in availablePeriods\" \r\n            :key=\"index\" \r\n            :class=\"{ \r\n              'period-item': true,\r\n              'filled': isPeriodFilled(period),\r\n              'current': isCurrentPeriod(period),\r\n              'past': isPastPeriod(period),\r\n              'future': isFuturePeriod(period),\r\n              'clickable': !isFuturePeriod(period)\r\n            }\"\r\n            @click=\"handlePeriodClick(period)\"\r\n            :style=\"{ cursor: isFuturePeriod(period) ? 'not-allowed' : 'pointer' }\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isPeriodFilled(period)\" class=\"period-status\">(Ispunjeno)</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\" class=\"period-status current\">(Trenutni period)</span>\r\n          <span v-else-if=\"isPastPeriod(period)\" class=\"period-status past clickable\">(Kliknite da unesete)</span>\r\n          <span v-else class=\"period-status future\">(Nije još dostupno)</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Display selected period data -->\r\n    <div v-if=\"selectedPeriod\" class=\"period-data\">\r\n      <h3>Period: {{ formatPeriod(selectedPeriod.start, selectedPeriod.end) }}</h3>\r\n      \r\n      <!-- Development data -->\r\n      <div v-if=\"currentPeriodDevelopment\" class=\"development-section\">\r\n        <h4>Razvoj</h4>\r\n        <div class=\"development-details\">\r\n          <div class=\"development-item\">\r\n            <h5>Fizički razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.physicalDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Emocionalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.emotionalDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Intelektualni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.intellectualDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Socijalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.socialDevelopment }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Milestones -->\r\n      <div v-if=\"currentPeriodMilestones.length\" class=\"milestones-section\">\r\n        <h4>Ključni Momenti</h4>\r\n        <div class=\"milestone-grid\">\r\n          <div v-for=\"milestone in currentPeriodMilestones\" \r\n               :key=\"milestone._id\" \r\n               class=\"milestone-item\">\r\n            <div class=\"milestone-header\">\r\n              <span class=\"milestone-type\">{{ milestone.milestoneType }}</span>\r\n              <span class=\"milestone-date\">{{ formatDate(milestone.date) }}</span>\r\n            </div>\r\n            <div class=\"milestone-content\">\r\n              <p class=\"milestone-progress\"><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n              <p v-if=\"milestone.notes\" class=\"milestone-notes\">\r\n                <strong>Napomene:</strong> {{ milestone.notes }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"!currentPeriodDevelopment && !currentPeriodMilestones.length\" class=\"no-data\">\r\n        <p>Nema podataka za ovaj period.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return { \r\n      developmentData: [],\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      childAge: 24, // Hardcoded for testing\r\n      childBirthDate: null,\r\n      selectedPeriod: null\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async fetchChildAge(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/children/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        \r\n        this.childBirthDate = new Date(response.data.birthDate);\r\n        this.childAge = 24; // Keeping hardcoded age for now\r\n        console.log('Child data:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching child age:', error);\r\n      }\r\n    },\r\n\r\n    isPeriodFilled(period) {\r\n      return Array.isArray(this.developmentData) && \r\n        this.developmentData.some(data => \r\n          data.startAge === period.start && data.endAge === period.end\r\n        );\r\n    },\r\n\r\n    isCurrentPeriod(period) {\r\n      return period.start === 24; // Current period (24 months)\r\n    },\r\n\r\n    isPastPeriod(period) {\r\n      return period.end <= 24; // All periods before current\r\n    },\r\n\r\n    isFuturePeriod(period) {\r\n      return period.start > 24; // All periods after current\r\n    },\r\n\r\n    handlePeriodClick(period) {\r\n      if (this.isFuturePeriod(period)) {\r\n        return;\r\n      }\r\n\r\n      const childId = this.$route.params.childId;\r\n      \r\n      if (this.isPeriodFilled(period)) {\r\n        // View filled period data\r\n        this.selectedPeriod = period;\r\n        // Fetch development and milestone data for this period\r\n        this.fetchDevelopmentData(childId);\r\n        this.fetchMilestones(childId);\r\n      } else if (this.isCurrentPeriod(period) || this.isPastPeriod(period)) {\r\n        // Show form for adding new data\r\n        this.$router.push({\r\n          name: 'AddDevelopmentData',\r\n          params: { childId },\r\n          query: {\r\n            startAge: period.start,\r\n            endAge: period.end,\r\n            action: 'add'\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    generateAvailablePeriods() {\r\n      const periods = [];\r\n      for (let i = 0; i <= 72; i += 6) {\r\n        periods.push({\r\n          start: i,\r\n          end: i + 6\r\n        });\r\n      }\r\n      this.availablePeriods = periods;\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString('sr-RS');\r\n    },\r\n\r\n    formatPeriod(start, end) {\r\n      return `${start}-${end} meseci${this.isPastPeriod({ start, end }) && !this.isPeriodFilled({ start, end }) ? ' (Možete uneti)' : ''}`;\r\n    },\r\n\r\n    async fetchDevelopmentData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child-development/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.developmentData = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching development data:', error);\r\n      }\r\n    },\r\n\r\n    async fetchMilestones(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/milestones/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.milestoneData = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching milestones:', error);\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentPeriodDevelopment() {\r\n      if (!this.selectedPeriod) return null;\r\n      return this.developmentData.find(data => \r\n        data.startAge === this.selectedPeriod.start && \r\n        data.endAge === this.selectedPeriod.end\r\n      );\r\n    },\r\n\r\n    currentPeriodMilestones() {\r\n      if (!this.selectedPeriod || !this.childBirthDate) return [];\r\n      \r\n      return this.milestoneData.filter(milestone => {\r\n        const milestoneDate = new Date(milestone.date);\r\n        const milestoneAge = Math.floor(\r\n          (milestoneDate - this.childBirthDate) / (1000 * 60 * 60 * 24 * 30.44)\r\n        );\r\n        \r\n        return milestoneAge >= this.selectedPeriod.start && \r\n               milestoneAge < this.selectedPeriod.end;\r\n      });\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const childId = this.$route.params.childId;\r\n    if (childId) {\r\n      await this.fetchChildAge(childId);\r\n      await Promise.all([\r\n        this.fetchDevelopmentData(childId),\r\n        this.fetchMilestones(childId)\r\n      ]);\r\n      this.generateAvailablePeriods();\r\n      \r\n      // Set initial selected period based on query params or default to current\r\n      const queryStartAge = parseInt(this.$route.query.startAge);\r\n      const queryEndAge = parseInt(this.$route.query.endAge);\r\n      \r\n      if (!isNaN(queryStartAge) && !isNaN(queryEndAge)) {\r\n        this.selectedPeriod = { start: queryStartAge, end: queryEndAge };\r\n      } else {\r\n        this.selectedPeriod = this.availablePeriods.find(p => p.start === 24);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.development-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n\r\n  h2 {\r\n    color: #2c3e50;\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n\r\n.available-periods {\r\n  margin-bottom: 30px;\r\n  \r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    gap: 15px;\r\n  }\r\n\r\n  .period-item {\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    background-color: #f8f9fa;\r\n    border: 1px solid #dee2e6;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover:not(.future) {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    &.filled {\r\n      background-color: #e3f2fd;\r\n      border-color: #90caf9;\r\n    }\r\n\r\n    &.current {\r\n      background-color: #e8f5e9;\r\n      border-color: #a5d6a7;\r\n    }\r\n\r\n    &.past {\r\n      background-color: #fff3e0;\r\n      border-color: #ffcc80;\r\n    }\r\n\r\n    &.future {\r\n      background-color: #f5f5f5;\r\n      border-color: #e0e0e0;\r\n      opacity: 0.7;\r\n    }\r\n\r\n    &.clickable {\r\n      &:hover {\r\n        background-color: #e3f2fd;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.period-data {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 25px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n\r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 25px;\r\n    padding-bottom: 15px;\r\n    border-bottom: 2px solid #eee;\r\n  }\r\n\r\n  .development-section, .milestones-section {\r\n    margin-bottom: 30px;\r\n\r\n    h4 {\r\n      color: #1976d2;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .development-details {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 20px;\r\n\r\n    .development-item {\r\n      background-color: #f8f9fa;\r\n      padding: 20px;\r\n      border-radius: 8px;\r\n      border-left: 4px solid #1976d2;\r\n\r\n      h5 {\r\n        color: #2c3e50;\r\n        margin-bottom: 10px;\r\n      }\r\n\r\n      p {\r\n        color: #666;\r\n        line-height: 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  .milestone-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 20px;\r\n\r\n    .milestone-item {\r\n      background-color: #fff;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n      border-left: 4px solid #ff9800;\r\n\r\n      .milestone-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 15px;\r\n        padding-bottom: 10px;\r\n        border-bottom: 1px solid #eee;\r\n\r\n        .milestone-type {\r\n          font-weight: bold;\r\n          color: #2c3e50;\r\n        }\r\n\r\n        .milestone-date {\r\n          color: #666;\r\n          font-size: 0.9em;\r\n        }\r\n      }\r\n\r\n      .milestone-content {\r\n        .milestone-progress {\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .milestone-notes {\r\n          font-style: italic;\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-data {\r\n    text-align: center;\r\n    padding: 30px;\r\n    color: #666;\r\n    font-style: italic;\r\n    background-color: #f8f9fa;\r\n    border-radius: 8px;\r\n  }\r\n}\r\n\r\n.period-status {\r\n  display: inline-block;\r\n  margin-left: 8px;\r\n  font-size: 0.9em;\r\n  \r\n  &.current {\r\n    color: #4caf50;\r\n  }\r\n  \r\n  &.past {\r\n    color: #ff9800;\r\n  }\r\n  \r\n  &.future {\r\n    color: #9e9e9e;\r\n  }\r\n\r\n  &.past.clickable {\r\n    color: #2196f3;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}