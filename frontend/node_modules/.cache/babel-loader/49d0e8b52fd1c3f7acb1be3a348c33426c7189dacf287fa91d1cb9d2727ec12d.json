{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: ['childId'],\n  data() {\n    return {\n      milestones: []\n    };\n  },\n  created() {\n    if (this.childId) {\n      localStorage.setItem('childId', this.childId);\n    }\n    const storedId = localStorage.getItem('childId');\n    if (!this.childId && !storedId) {\n      alert('Molimo registrujte dete pre nastavka.');\n      this.$router.push('/child-registration');\n      return;\n    }\n    this.fetchMilestones();\n  },\n  methods: {\n    async fetchMilestones() {\n      const id = this.childId || localStorage.getItem('childId');\n      if (!id) {\n        console.error('Child ID is missing');\n        return;\n      }\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('User not authenticated');\n          return;\n        }\n\n        // Make an API call to fetch milestones based on childId\n        const response = await axios.get(`http://localhost:5000/api/milestones/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.milestones = response.data; // Assuming response contains milestones directly\n      } catch (error) {\n        console.error('Error fetching milestones:', error);\n      }\n    },\n    // Method to format the date\n    formatDate(value) {\n      if (!value) return '';\n      const date = new Date(value);\n      return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","milestones","created","childId","localStorage","setItem","storedId","getItem","alert","$router","push","fetchMilestones","methods","id","console","error","token","response","get","headers","Authorization","formatDate","value","date","Date","getDate","getMonth","getFullYear"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\MilestoneList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <h2 class=\"page-title\">Pregled Milestone-a</h2>\r\n    <div v-if=\"milestones.length\" class=\"milestone-list\">\r\n      <div v-for=\"(milestone, index) in milestones\" :key=\"index\" class=\"milestone-item\">\r\n        <h3 class=\"milestone-header\">{{ milestone.milestoneType }} - {{ formatDate(milestone.milestoneDate) }}</h3>\r\n        <p><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n        <p><strong>Opisi:</strong> {{ milestone.notes }}</p>\r\n      </div>\r\n\r\n      <button @click=\"editMilestone(milestone._id)\" class=\"edit-btn\">Edit</button>\r\n      <button @click=\"deleteMilestone(milestone._id)\" class=\"delete-btn\">Delete</button>\r\n    </div>\r\n\r\n    <div v-else class=\"no-data-message\">\r\n      <p>Nema podataka o Milestone-ima za ovo dete.</p>\r\n    </div>\r\n\r\n    <router-link :to=\"`/milestone-form/${childId}`\" class=\"add-milestone-button\">Dodaj Milestone</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: ['childId'],\r\n  data() {\r\n    return {\r\n      milestones: [],\r\n    };\r\n  },\r\n  created() {\r\n    if (this.childId) {\r\n      localStorage.setItem('childId', this.childId);\r\n    }\r\n    const storedId = localStorage.getItem('childId');\r\n    if (!this.childId && !storedId) {\r\n      alert('Molimo registrujte dete pre nastavka.');\r\n      this.$router.push('/child-registration');\r\n      return;\r\n    }\r\n    this.fetchMilestones();\r\n  },\r\n  methods: {\r\n    async fetchMilestones() {\r\n      const id = this.childId || localStorage.getItem('childId');\r\n      if (!id) {\r\n        console.error('Child ID is missing');\r\n        return;\r\n      }\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          console.error('User not authenticated');\r\n          return;\r\n        }\r\n\r\n        // Make an API call to fetch milestones based on childId\r\n        const response = await axios.get(`http://localhost:5000/api/milestones/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.milestones = response.data; // Assuming response contains milestones directly\r\n      } catch (error) {\r\n        console.error('Error fetching milestones:', error);\r\n      }\r\n    },\r\n\r\n    // Method to format the date\r\n    formatDate(value) {\r\n      if (!value) return '';\r\n      const date = new Date(value);\r\n      return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.development-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.page-title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.milestone-list {\r\n  margin-bottom: 20px;\r\n\r\n  .milestone-item {\r\n    background-color: #fff;\r\n    padding: 15px;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n\r\n    .milestone-header {\r\n      font-size: 20px;\r\n      color: #333;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    p {\r\n      font-size: 16px;\r\n      color: #555;\r\n      margin: 5px 0;\r\n    }\r\n\r\n    .milestone-type {\r\n      font-weight: bold;\r\n    }\r\n\r\n    .progress {\r\n      font-style: italic;\r\n    }\r\n\r\n    .notes {\r\n      margin-top: 10px;\r\n      font-size: 14px;\r\n      color: #777;\r\n    }\r\n  }\r\n}\r\n\r\n.no-data-message {\r\n  text-align: center;\r\n  color: #555;\r\n  font-size: 18px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.add-milestone-button {\r\n  display: inline-block;\r\n  margin-top: 20px;\r\n  padding: 12px 25px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACC,OAAO,EAAE;MAChBC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAE,IAAI,CAACF,OAAO,CAAC;IAC/C;IACA,MAAMG,QAAO,GAAIF,YAAY,CAACG,OAAO,CAAC,SAAS,CAAC;IAChD,IAAI,CAAC,IAAI,CAACJ,OAAM,IAAK,CAACG,QAAQ,EAAE;MAC9BE,KAAK,CAAC,uCAAuC,CAAC;MAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;MACxC;IACF;IACA,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,MAAME,EAAC,GAAI,IAAI,CAACV,OAAM,IAAKC,YAAY,CAACG,OAAO,CAAC,SAAS,CAAC;MAC1D,IAAI,CAACM,EAAE,EAAE;QACPC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;QACpC;MACF;MACA,IAAI;QACF,MAAMC,KAAI,GAAIZ,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACS,KAAK,EAAE;UACVF,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;UACvC;QACF;;QAEA;QACA,MAAME,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,wCAAwCL,EAAE,EAAE,EAAE;UAC7EM,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,IAAI,CAACf,UAAS,GAAIgB,QAAQ,CAACjB,IAAI,EAAE;MACnC,EAAE,OAAOe,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED;IACAM,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;MACrB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,KAAK,CAAC;MAC5B,OAAO,GAAGC,IAAI,CAACE,OAAO,CAAC,CAAC,IAAIF,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,IAAIH,IAAI,CAACI,WAAW,CAAC,CAAC,EAAE;IACzE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}