{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      childName: null,\n      childAge: null,\n      developmentData: [],\n      milestoneData: [],\n      availablePeriods: [],\n      selectedPeriod: null\n    };\n  },\n  computed: {\n    currentPeriodDevelopment() {\n      return this.selectedPeriod ? this.developmentData.find(d => d.startAge === this.selectedPeriod.start && d.endAge === this.selectedPeriod.end) : null;\n    },\n    currentPeriodMilestones() {\n      return this.selectedPeriod ? this.milestoneData.filter(m => m.startAge === this.selectedPeriod.start && m.endAge === this.selectedPeriod.end) : [];\n    }\n  },\n  methods: {\n    async fetchChildData(childId) {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        const response = await axios.get(`http://localhost:5000/api/children/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data) {\n          this.childName = response.data.name;\n          this.childAge = this.calculateAgeInMonths(response.data.birthDate);\n          this.generateAvailablePeriods();\n        }\n      } catch (error) {\n        console.error(\"‚ùå Gre≈°ka pri dobijanju podataka o detetu:\", error);\n      }\n    },\n    async fetchDevelopmentData(childId) {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.developmentData = response.data || [];\n      } catch (error) {\n        console.error(\"‚ùå Gre≈°ka pri dobijanju podataka o razvoju:\", error);\n      }\n    },\n    async fetchMilestones(childId) {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        const response = await axios.get(`http://localhost:5000/api/milestones/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.milestoneData = response.data || [];\n      } catch (error) {\n        console.error(\"‚ùå Gre≈°ka pri dobijanju prekretnica:\", error);\n      }\n    },\n    selectPeriod(period) {\n      this.selectedPeriod = period;\n    },\n    addDevelopment() {\n      this.$router.push({\n        path: `/child-development-form/${this.$route.params.childId}`,\n        query: {\n          startAge: this.selectedPeriod.start,\n          endAge: this.selectedPeriod.end\n        }\n      });\n    },\n    editDevelopment() {\n      this.$router.push({\n        path: `/child-development-form/${this.$route.params.childId}`,\n        query: {\n          startAge: this.selectedPeriod.start,\n          endAge: this.selectedPeriod.end\n        }\n      });\n    },\n    addMilestone() {\n      this.$router.push({\n        path: `/milestone-form/${this.$route.params.childId}`,\n        query: {\n          startAge: this.selectedPeriod.start,\n          endAge: this.selectedPeriod.end\n        }\n      });\n    },\n    editMilestone(milestoneId) {\n      this.$router.push({\n        path: `/milestone-form/${this.$route.params.childId}/${milestoneId}`\n      });\n    }\n  },\n  async created() {\n    const childId = this.$route.params.childId;\n    if (childId) {\n      await this.fetchChildData(childId);\n      await this.fetchDevelopmentData(childId);\n      await this.fetchMilestones(childId);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","childName","childAge","developmentData","milestoneData","availablePeriods","selectedPeriod","computed","currentPeriodDevelopment","find","d","startAge","start","endAge","end","currentPeriodMilestones","filter","m","methods","fetchChildData","childId","token","sessionStorage","getItem","response","get","headers","Authorization","name","calculateAgeInMonths","birthDate","generateAvailablePeriods","error","console","fetchDevelopmentData","fetchMilestones","selectPeriod","period","addDevelopment","$router","push","path","$route","params","query","editDevelopment","addMilestone","editMilestone","milestoneId","created"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <h2>Praƒáenje Razvoja za {{ childName || \"Nepoznato dete\" }}</h2>\r\n\r\n    <!-- Child Info -->\r\n    <div class=\"child-info\">\r\n      <h3>{{ childName }}</h3>\r\n      <p><strong>Starost:</strong> {{ childAge ? childAge + \" meseci\" : \"Nepoznata starost\" }}</p>\r\n    </div>\r\n\r\n    <!-- Period Selector -->\r\n    <div class=\"period-selector\">\r\n      <h3>Izaberite period:</h3>\r\n      <div class=\"periods-list\">\r\n        <button\r\n          v-for=\"period in availablePeriods\"\r\n          :key=\"`${period.start}-${period.end}`\"\r\n          :class=\"getPeriodClass(period)\"\r\n          @click=\"selectPeriod(period)\"\r\n          :disabled=\"isFuturePeriod(period)\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isFilledPeriod(period)\">‚úî Ispunjeno</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\">üü¢ Trenutni period</span>\r\n          <span v-else-if=\"isFuturePeriod(period)\">üö´ Nedostupan</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Display Development & Milestones -->\r\n    <div v-if=\"selectedPeriod\" class=\"period-data\">\r\n      <h3>Razvoj za period: {{ formatPeriod(selectedPeriod.start, selectedPeriod.end) }}</h3>\r\n\r\n      <!-- Development Data -->\r\n      <div v-if=\"currentPeriodDevelopment\" class=\"development-section\">\r\n        <h4>Razvoj deteta</h4>\r\n        <div class=\"development-details\">\r\n          <p><strong>Fiziƒçki razvoj:</strong> {{ currentPeriodDevelopment.physicalDevelopment || \"Nema podataka\" }}</p>\r\n          <p><strong>Emocionalni razvoj:</strong> {{ currentPeriodDevelopment.emotionalDevelopment || \"Nema podataka\" }}</p>\r\n          <p><strong>Intelektualni razvoj:</strong> {{ currentPeriodDevelopment.intellectualDevelopment || \"Nema podataka\" }}</p>\r\n          <p><strong>Socijalni razvoj:</strong> {{ currentPeriodDevelopment.socialDevelopment || \"Nema podataka\" }}</p>\r\n        </div>\r\n        <button @click=\"editDevelopment\" class=\"edit-btn\">Izmeni</button>\r\n      </div>\r\n\r\n      <!-- Unfilled Development -->\r\n      <div v-else class=\"no-records\">\r\n        <p>Nema unetih podataka za ovaj period.</p>\r\n        <button @click=\"addDevelopment\" class=\"add-development-btn\">Dodaj Razvoj</button>\r\n      </div>\r\n\r\n      <!-- Milestones -->\r\n      <div v-if=\"currentPeriodMilestones.length\" class=\"milestones-section\">\r\n        <h4>Kljuƒçni Momenti za ovaj period</h4>\r\n        <div class=\"milestone-list\">\r\n          <div v-for=\"milestone in currentPeriodMilestones\" :key=\"milestone._id\" class=\"milestone-item\">\r\n            <h3>{{ milestone.milestoneType }} - {{ formatDate(milestone.milestoneDate) }}</h3>\r\n            <p><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n            <p><strong>Napomene:</strong> {{ milestone.notes }}</p>\r\n            <div class=\"button-group\">\r\n              <button @click=\"editMilestone(milestone._id)\" class=\"edit-btn\">Izmeni</button>\r\n              <button @click=\"confirmDelete(milestone._id)\" class=\"delete-btn\">Obri≈°i</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Unfilled Milestones -->\r\n      <div v-else class=\"no-records\">\r\n        <p>Nema unetih Kljuƒçnih Momenta za ovaj period.</p>\r\n        <button @click=\"addMilestone\" class=\"add-milestone-btn\">Dodaj Kljuƒçni Momenat</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      childName: null,\r\n      childAge: null,\r\n      developmentData: [],\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      selectedPeriod: null,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    currentPeriodDevelopment() {\r\n      return this.selectedPeriod\r\n        ? this.developmentData.find(\r\n            (d) => d.startAge === this.selectedPeriod.start && d.endAge === this.selectedPeriod.end\r\n          )\r\n        : null;\r\n    },\r\n\r\n    currentPeriodMilestones() {\r\n      return this.selectedPeriod\r\n        ? this.milestoneData.filter(\r\n            (m) => m.startAge === this.selectedPeriod.start && m.endAge === this.selectedPeriod.end\r\n          )\r\n        : [];\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async fetchChildData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/children/${childId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        if (response.data) {\r\n          this.childName = response.data.name;\r\n          this.childAge = this.calculateAgeInMonths(response.data.birthDate);\r\n          this.generateAvailablePeriods();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"‚ùå Gre≈°ka pri dobijanju podataka o detetu:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchDevelopmentData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child-development/${childId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        this.developmentData = response.data || [];\r\n      } catch (error) {\r\n        console.error(\"‚ùå Gre≈°ka pri dobijanju podataka o razvoju:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchMilestones(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/milestones/${childId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        this.milestoneData = response.data || [];\r\n      } catch (error) {\r\n        console.error(\"‚ùå Gre≈°ka pri dobijanju prekretnica:\", error);\r\n      }\r\n    },\r\n\r\n    selectPeriod(period) {\r\n      this.selectedPeriod = period;\r\n    },\r\n\r\n    addDevelopment() {\r\n      this.$router.push({\r\n        path: `/child-development-form/${this.$route.params.childId}`,\r\n        query: {\r\n          startAge: this.selectedPeriod.start,\r\n          endAge: this.selectedPeriod.end\r\n        }\r\n      });\r\n    },\r\n\r\n    editDevelopment() {\r\n      this.$router.push({\r\n        path: `/child-development-form/${this.$route.params.childId}`,\r\n        query: {\r\n          startAge: this.selectedPeriod.start,\r\n          endAge: this.selectedPeriod.end\r\n        }\r\n      });\r\n    },\r\n\r\n    addMilestone() {\r\n      this.$router.push({\r\n        path: `/milestone-form/${this.$route.params.childId}`,\r\n        query: {\r\n          startAge: this.selectedPeriod.start,\r\n          endAge: this.selectedPeriod.end\r\n        }\r\n      });\r\n    },\r\n\r\n    editMilestone(milestoneId) {\r\n      this.$router.push({\r\n        path: `/milestone-form/${this.$route.params.childId}/${milestoneId}`\r\n      });\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const childId = this.$route.params.childId;\r\n    if (childId) {\r\n      await this.fetchChildData(childId);\r\n      await this.fetchDevelopmentData(childId);\r\n      await this.fetchMilestones(childId);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n/* Center everything */\r\n.development-container {\r\n  text-align: center;\r\n  padding: 40px;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Child Info Box */\r\n.child-info {\r\n  background: #f8f9fa;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Period Selector */\r\n.period-selector {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* Grid layout for periods - 5 per row */\r\n.periods-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 15px;\r\n  justify-content: center;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n\r\n  button {\r\n    font-size: 18px;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    font-weight: bold;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    border: none;\r\n    width: 100%;\r\n\r\n    &:hover:not(:disabled) {\r\n      transform: scale(1.05);\r\n    }\r\n\r\n    &.current {\r\n      background-color: #4caf50; // Green for the current period\r\n      color: white;\r\n    }\r\n\r\n    &.filled {\r\n      background-color: #ffcc00; // Yellow for past filled periods\r\n      color: black;\r\n    }\r\n\r\n    &.future {\r\n      background-color: #cccccc; // Grey for future unavailable periods\r\n      color: white;\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n}\r\n\r\n/* Style Development and Milestone sections */\r\n.period-data {\r\n  margin-top: 30px;\r\n  background: #fff;\r\n  padding: 30px;\r\n  border-radius: 15px;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: left;\r\n\r\n  h3, h4 {\r\n    color: #2c3e50;\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n    border-bottom: 2px solid #ddd;\r\n    padding-bottom: 10px;\r\n  }\r\n}\r\n\r\n/* Development Details */\r\n.development-details {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 15px;\r\n\r\n  .development-item {\r\n    background-color: #f8f9fa;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    border-left: 6px solid #1976d2;\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n/* Milestone List */\r\n.milestone-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n\r\n  .milestone-item {\r\n    background: white;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n    border-left: 6px solid #ff9800;\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n/* Empty Data Message */\r\n.no-records {\r\n  text-align: center;\r\n  font-style: italic;\r\n  color: #666;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}