{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '../axios'; // Uvoziš svoj API objekat\n\nexport default {\n  data() {\n    return {\n      newMilestone: {\n        milestoneType: '',\n        milestoneDate: '',\n        progress: '',\n        notes: ''\n      },\n      milestones: [] // Dodaj ovu listu ako ne postoji\n    };\n  },\n  methods: {\n    async submitMilestone() {\n      try {\n        // Slanje novog milestone-a na backend\n        await api.post('/milestones', this.newMilestone);\n        alert('Milestone je uspešno dodat!');\n\n        // Dodaj novi milestone u trenutnu listu\n        this.milestones.push({\n          ...this.newMilestone\n        }); // Dodavanje novog milestone-a u listu\n\n        // Resetovanje forme\n        this.newMilestone = {\n          milestoneType: '',\n          milestoneDate: '',\n          progress: '',\n          notes: ''\n        };\n\n        // Osveži listu sa svih milestone-ova\n        this.fetchMilestones();\n      } catch (error) {\n        console.error('Greška prilikom slanja podataka:', error);\n        alert('Došlo je do greške prilikom dodavanja!');\n      }\n    },\n    async fetchMilestones() {\n      try {\n        const response = await api.get('/milestones');\n        this.milestones = response.data; // Osveži listu sa novim podacima\n      } catch (error) {\n        console.error('Greška pri dohvatanju milestone-ova:', error);\n      }\n    }\n  },\n  created() {\n    // Inicijalno učitaj sve milestone-ove kada se komponenta učita\n    this.fetchMilestones();\n  }\n};","map":{"version":3,"names":["api","data","newMilestone","milestoneType","milestoneDate","progress","notes","milestones","methods","submitMilestone","post","alert","push","fetchMilestones","error","console","response","get","created"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\MilestoneForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Dodaj Milestone</h2>\r\n      <form @submit.prevent=\"submitMilestone\">\r\n        <div>\r\n          <label for=\"milestoneType\">Tip Milestone-a:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"milestoneType\"\r\n            v-model=\"newMilestone.milestoneType\"\r\n            required\r\n          />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"milestoneDate\">Datum:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"milestoneDate\"\r\n            v-model=\"newMilestone.milestoneDate\"\r\n            required\r\n          />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"progress\">Napredak:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"progress\"\r\n            v-model=\"newMilestone.progress\"\r\n            required\r\n          />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"notes\">Beleške:</label>\r\n          <textarea\r\n            id=\"notes\"\r\n            v-model=\"newMilestone.notes\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n  \r\n        <button type=\"submit\">Dodaj Milestone</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from '../axios'; // Uvoziš svoj API objekat\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        newMilestone: {\r\n          milestoneType: '',\r\n          milestoneDate: '',\r\n          progress: '',\r\n          notes: '',\r\n        },\r\n        milestones: [], // Dodaj ovu listu ako ne postoji\r\n      };\r\n    },\r\n    methods: {\r\n      async submitMilestone() {\r\n        try {\r\n          // Slanje novog milestone-a na backend\r\n          await api.post('/milestones', this.newMilestone);\r\n  \r\n          alert('Milestone je uspešno dodat!');\r\n          \r\n          // Dodaj novi milestone u trenutnu listu\r\n          this.milestones.push({...this.newMilestone});  // Dodavanje novog milestone-a u listu\r\n  \r\n          // Resetovanje forme\r\n          this.newMilestone = {\r\n            milestoneType: '',\r\n            milestoneDate: '',\r\n            progress: '',\r\n            notes: '',\r\n          };\r\n  \r\n          // Osveži listu sa svih milestone-ova\r\n          this.fetchMilestones();\r\n        } catch (error) {\r\n          console.error('Greška prilikom slanja podataka:', error);\r\n          alert('Došlo je do greške prilikom dodavanja!');\r\n        }\r\n      },\r\n      async fetchMilestones() {\r\n        try {\r\n          const response = await api.get('/milestones');\r\n          this.milestones = response.data; // Osveži listu sa novim podacima\r\n        } catch (error) {\r\n          console.error('Greška pri dohvatanju milestone-ova:', error);\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      // Inicijalno učitaj sve milestone-ove kada se komponenta učita\r\n      this.fetchMilestones();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"scss\">\r\n  .milestone-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    font-family: 'Arial', sans-serif;\r\n  }\r\n  \r\n  h2 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .milestone-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n  \r\n  label {\r\n    font-size: 16px;\r\n    color: #555;\r\n  }\r\n  \r\n  input,\r\n  textarea {\r\n    padding: 12px;\r\n    border-radius: 6px;\r\n    border: 1px solid #ddd;\r\n    font-size: 14px;\r\n    transition: border-color 0.3s;\r\n  }\r\n  \r\n  input:focus,\r\n  textarea:focus {\r\n    border-color: #007bff;\r\n    outline: none;\r\n  }\r\n  \r\n  textarea {\r\n    resize: vertical;\r\n    min-height: 100px;\r\n  }\r\n  \r\n  .submit-btn {\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    border-radius: 6px;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .submit-btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .submit-btn:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .milestone-container {\r\n      padding: 15px;\r\n    }\r\n  \r\n    .form-group input,\r\n    .form-group textarea {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";AAiDE,OAAOA,GAAE,MAAO,UAAU,EAAE;;AAE5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF;QACA,MAAMT,GAAG,CAACU,IAAI,CAAC,aAAa,EAAE,IAAI,CAACR,YAAY,CAAC;QAEhDS,KAAK,CAAC,6BAA6B,CAAC;;QAEpC;QACA,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC;UAAC,GAAG,IAAI,CAACV;QAAY,CAAC,CAAC,EAAG;;QAE/C;QACA,IAAI,CAACA,YAAW,GAAI;UAClBC,aAAa,EAAE,EAAE;UACjBC,aAAa,EAAE,EAAE;UACjBC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,CAAC;;QAED;QACA,IAAI,CAACO,eAAe,CAAC,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDH,KAAK,CAAC,wCAAwC,CAAC;MACjD;IACF,CAAC;IACD,MAAME,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMhB,GAAG,CAACiB,GAAG,CAAC,aAAa,CAAC;QAC7C,IAAI,CAACV,UAAS,GAAIS,QAAQ,CAACf,IAAI,EAAE;MACnC,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACL,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}