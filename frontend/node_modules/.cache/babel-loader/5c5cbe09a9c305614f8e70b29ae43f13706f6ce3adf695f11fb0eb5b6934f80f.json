{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '../axios'; // Uvoziš svoj API objekat\n\nexport default {\n  data() {\n    return {\n      newMilestone: {\n        milestoneType: '',\n        milestoneDate: '',\n        progress: '',\n        notes: ''\n      },\n      milestones: [],\n      // Lista svih milestone-ova\n      errorMessage: '' // Poruka o grešci\n    };\n  },\n  methods: {\n    async submitMilestone() {\n      // Provera da li su obavezna polja popunjena\n      if (!this.newMilestone.milestoneDate || !this.newMilestone.milestoneType || !this.newMilestone.progress) {\n        this.errorMessage = 'Molimo vas da popunite sva obavezna polja.';\n        return;\n      }\n      try {\n        // Slanje novog milestone-a na backend\n        await api.post('/milestones', this.newMilestone);\n        alert('Milestone je uspešno dodat!');\n\n        // Dodaj novi milestone u trenutnu listu\n        this.milestones.push({\n          ...this.newMilestone\n        }); // Dodavanje novog milestone-a u listu\n\n        // Resetovanje forme\n        this.newMilestone = {\n          milestoneType: '',\n          milestoneDate: '',\n          progress: '',\n          notes: ''\n        };\n        this.errorMessage = '';\n\n        // Osveži listu sa svih milestone-ova\n        this.fetchMilestones();\n      } catch (error) {\n        console.error('Greška prilikom slanja podataka:', error);\n        this.errorMessage = 'Došlo je do greške prilikom dodavanja. Molimo pokušajte ponovo.';\n      }\n    },\n    async fetchMilestones() {\n      try {\n        const response = await api.get('/milestones');\n        this.milestones = response.data; // Osveži listu sa novim podacima\n      } catch (error) {\n        console.error('Greška pri dohvatanju milestone-ova:', error);\n        this.errorMessage = 'Došlo je do greške prilikom učitavanja podataka.';\n      }\n    }\n  },\n  created() {\n    // Inicijalno učitaj sve milestone-ove kada se komponenta učita\n    this.fetchMilestones();\n  }\n};","map":{"version":3,"names":["api","data","newMilestone","milestoneType","milestoneDate","progress","notes","milestones","errorMessage","methods","submitMilestone","post","alert","push","fetchMilestones","error","console","response","get","created"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\MilestoneForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"milestone-container\">\r\n    <h2>Dodaj Milestone</h2>\r\n\r\n    <!-- Prikazivanje greške ako su obavezna polja prazna -->\r\n    <div v-if=\"errorMessage\" class=\"error-message\">\r\n      {{ errorMessage }}\r\n    </div>\r\n\r\n    <!-- Forma za unos novog milestone-a -->\r\n    <form @submit.prevent=\"submitMilestone\" class=\"milestone-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"milestoneType\">Tip Milestone-a:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"milestoneType\"\r\n          v-model=\"newMilestone.milestoneType\"\r\n          required\r\n          placeholder=\"Unesite tip Milestone-a\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"milestoneDate\">Datum:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"milestoneDate\"\r\n          v-model=\"newMilestone.milestoneDate\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"progress\">Napredak:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"progress\"\r\n          v-model=\"newMilestone.progress\"\r\n          required\r\n          placeholder=\"Unesite napredak\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"notes\">Beleške:</label>\r\n        <textarea\r\n          id=\"notes\"\r\n          v-model=\"newMilestone.notes\"\r\n          placeholder=\"Unesite beleške\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group submit-group\">\r\n        <button type=\"submit\" class=\"submit-btn\">Dodaj Milestone</button>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- Prikazivanje prethodnih milestone-ova -->\r\n    <div v-if=\"milestones.length\">\r\n      <h3>Prethodni Milestone-ovi</h3>\r\n      <ul>\r\n        <li v-for=\"(milestone, index) in milestones\" :key=\"index\">\r\n          <p><strong>Datum Milestone-a:</strong> {{ milestone.milestoneDate }}</p>\r\n          <p><strong>Tip Milestone-a:</strong> {{ milestone.milestoneType }}</p>\r\n          <p><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n          <p><strong>Napomene:</strong> {{ milestone.notes || 'Nema napomena' }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else>\r\n      <p>Nema podataka o prethodnim milestone-ovima.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '../axios'; // Uvoziš svoj API objekat\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newMilestone: {\r\n        milestoneType: '',\r\n        milestoneDate: '',\r\n        progress: '',\r\n        notes: '',\r\n      },\r\n      milestones: [], // Lista svih milestone-ova\r\n      errorMessage: '', // Poruka o grešci\r\n    };\r\n  },\r\n  methods: {\r\n    async submitMilestone() {\r\n      // Provera da li su obavezna polja popunjena\r\n      if (!this.newMilestone.milestoneDate || !this.newMilestone.milestoneType || !this.newMilestone.progress) {\r\n        this.errorMessage = 'Molimo vas da popunite sva obavezna polja.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Slanje novog milestone-a na backend\r\n        await api.post('/milestones', this.newMilestone);\r\n\r\n        alert('Milestone je uspešno dodat!');\r\n        \r\n        // Dodaj novi milestone u trenutnu listu\r\n        this.milestones.push({...this.newMilestone});  // Dodavanje novog milestone-a u listu\r\n\r\n        // Resetovanje forme\r\n        this.newMilestone = {\r\n          milestoneType: '',\r\n          milestoneDate: '',\r\n          progress: '',\r\n          notes: '',\r\n        };\r\n        this.errorMessage = '';\r\n\r\n        // Osveži listu sa svih milestone-ova\r\n        this.fetchMilestones();\r\n      } catch (error) {\r\n        console.error('Greška prilikom slanja podataka:', error);\r\n        this.errorMessage = 'Došlo je do greške prilikom dodavanja. Molimo pokušajte ponovo.';\r\n      }\r\n    },\r\n    async fetchMilestones() {\r\n      try {\r\n        const response = await api.get('/milestones');\r\n        this.milestones = response.data; // Osveži listu sa novim podacima\r\n      } catch (error) {\r\n        console.error('Greška pri dohvatanju milestone-ova:', error);\r\n        this.errorMessage = 'Došlo je do greške prilikom učitavanja podataka.';\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    // Inicijalno učitaj sve milestone-ove kada se komponenta učita\r\n    this.fetchMilestones();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\nform {\r\n  margin-top: 20px;\r\n}\r\n\r\nform div {\r\n  margin-bottom: 10px;\r\n}\r\n\r\ninput, textarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 15px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.submit-btn {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  width: 100%;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";AA4EA,OAAOA,GAAE,MAAO,UAAU,EAAE;;AAE5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,UAAU,EAAE,EAAE;MAAE;MAChBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB;MACA,IAAI,CAAC,IAAI,CAACR,YAAY,CAACE,aAAY,IAAK,CAAC,IAAI,CAACF,YAAY,CAACC,aAAY,IAAK,CAAC,IAAI,CAACD,YAAY,CAACG,QAAQ,EAAE;QACvG,IAAI,CAACG,YAAW,GAAI,4CAA4C;QAChE;MACF;MAEA,IAAI;QACF;QACA,MAAMR,GAAG,CAACW,IAAI,CAAC,aAAa,EAAE,IAAI,CAACT,YAAY,CAAC;QAEhDU,KAAK,CAAC,6BAA6B,CAAC;;QAEpC;QACA,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC;UAAC,GAAG,IAAI,CAACX;QAAY,CAAC,CAAC,EAAG;;QAE/C;QACA,IAAI,CAACA,YAAW,GAAI;UAClBC,aAAa,EAAE,EAAE;UACjBC,aAAa,EAAE,EAAE;UACjBC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,CAAC;QACD,IAAI,CAACE,YAAW,GAAI,EAAE;;QAEtB;QACA,IAAI,CAACM,eAAe,CAAC,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,IAAI,CAACP,YAAW,GAAI,iEAAiE;MACvF;IACF,CAAC;IACD,MAAMM,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMjB,GAAG,CAACkB,GAAG,CAAC,aAAa,CAAC;QAC7C,IAAI,CAACX,UAAS,GAAIU,QAAQ,CAAChB,IAAI,EAAE;MACnC,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D,IAAI,CAACP,YAAW,GAAI,kDAAkD;MACxE;IACF;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACL,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}