{"ast":null,"code":"import api from './axios';\nexport default {\n  data() {\n    return {\n      milestoneData: []\n    };\n  },\n  computed: {\n    // Provera da li je korisnik ulogovan na osnovu tokena\n    isAuthenticated() {\n      return !!localStorage.getItem('token'); // Ako postoji token u localStorage, korisnik je ulogovan\n    }\n  },\n  created() {\n    this.fetchMilestoneData();\n  },\n  methods: {\n    // Funkcija za dobijanje podataka sa backend-a\n    async fetchMilestoneData() {\n      try {\n        const response = await api.get('/milestones');\n        this.milestoneData = response.data; // Spremanje podataka u milestoneData\n      } catch (error) {\n        console.error('Greška prilikom dobijanja podataka:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","data","milestoneData","computed","isAuthenticated","localStorage","getItem","created","fetchMilestoneData","methods","response","get","error","console"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Navigacija -->\n    <nav>\n      <router-link to=\"/\">Početna</router-link> |\n      \n      <!-- Sakrij ove linkove ako korisnik nije prijavljen -->\n      <router-link v-if=\"isAuthenticated\" to=\"/milestone-form\">Dodaj Milestone</router-link> |\n      <router-link v-if=\"isAuthenticated\" to=\"/milestone-list\">Pregled Milestone-a</router-link> |\n      <router-link v-if=\"isAuthenticated\" to=\"/child-development-list\">Pregled razvoja</router-link>\n      \n      <!-- Prikazujemo login i signup ako korisnik nije prijavljen -->\n      <router-link v-if=\"!isAuthenticated\" to=\"/login\">Prijavite se</router-link> |\n      <router-link v-if=\"!isAuthenticated\" to=\"/signup\">Registrujte se</router-link>\n    </nav>\n\n    <!-- Prikazivanje odgovarajuće komponente na osnovu rute -->\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport api from './axios';\n\nexport default {\n  data() {\n    return {\n      milestoneData: [],\n    };\n  },\n  computed: {\n    // Provera da li je korisnik ulogovan na osnovu tokena\n    isAuthenticated() {\n      return !!localStorage.getItem('token');  // Ako postoji token u localStorage, korisnik je ulogovan\n    }\n  },\n  created() {\n    this.fetchMilestoneData(); \n  },\n  methods: {\n    // Funkcija za dobijanje podataka sa backend-a\n    async fetchMilestoneData() {\n      try {\n        const response = await api.get('/milestones');\n        this.milestoneData = response.data; // Spremanje podataka u milestoneData\n      } catch (error) {\n        console.error('Greška prilikom dobijanja podataka:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Stilizacija za navigaciju */\nnav {\n  margin-bottom: 20px;\n}\n\nnav a {\n  margin-right: 10px;\n  text-decoration: none;\n  color: #007bff;\n}\n\nnav a:hover {\n  text-decoration: underline;\n}\n\n/* Stilizacija za prikazivanje podataka */\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin: 5px 0;\n}\n</style>\n"],"mappings":"AAsBA,OAAOA,GAAE,MAAO,SAAS;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,eAAeA,CAAA,EAAG;MAChB,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAG;IAC3C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,GAAG,CAACW,GAAG,CAAC,aAAa,CAAC;QAC7C,IAAI,CAACT,aAAY,GAAIQ,QAAQ,CAACT,IAAI,EAAE;MACtC,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}