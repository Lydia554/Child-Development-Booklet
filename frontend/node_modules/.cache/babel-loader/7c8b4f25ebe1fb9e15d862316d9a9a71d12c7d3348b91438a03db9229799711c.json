{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Lista Milestone-ova\", -1 /* HOISTED */)), $data.milestones.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.milestones, milestone => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: milestone._id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(milestone.milestoneType), 1 /* TEXT */), _createTextVNode(\" - \" + _toDisplayString(milestone.milestoneDate) + \" \", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(milestone.progress), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(milestone.notes), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Nema unetih milestone-ova.\"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","milestones","length","_hoisted_1","_Fragment","_renderList","milestone","_id","_toDisplayString","milestoneType","_createTextVNode","milestoneDate","progress","notes","_hoisted_2"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\MilestoneList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Lista Milestone-ova</h2>\r\n      <ul v-if=\"milestones.length\">\r\n        <li v-for=\"milestone in milestones\" :key=\"milestone._id\">\r\n          <strong>{{ milestone.milestoneType }}</strong> - {{ milestone.milestoneDate }}\r\n          <p>{{ milestone.progress }}</p>\r\n          <p>{{ milestone.notes }}</p>\r\n        </li>\r\n      </ul>\r\n      <p v-else>Nema unetih milestone-ova.</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from '../axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        milestones: [],\r\n        newMilestone: {\r\n          milestoneType: '',\r\n          milestoneDate: '',\r\n          progress: '',\r\n          notes: '',\r\n        },\r\n        isEditing: false,\r\n      };\r\n    },\r\n    async created() {\r\n      await this.fetchMilestones();\r\n    },\r\n    methods: {\r\n      async fetchMilestones() {\r\n        try {\r\n          const response = await api.get('/milestones');\r\n          this.milestones = response.data;\r\n        } catch (error) {\r\n          console.error('Greška pri dohvatanju milestone-ova:', error);\r\n        }\r\n      },\r\n      async submitMilestone() {\r\n        try {\r\n          const response = await api.post('/milestones', this.newMilestone);\r\n          this.milestones.push(response.data);\r\n          this.resetForm();\r\n        } catch (error) {\r\n          console.error('Greška prilikom dodavanja milestone-a:', error);\r\n        }\r\n      },\r\n      async updateMilestone() {\r\n        try {\r\n          await api.put(`/milestones/${this.newMilestone._id}`, this.newMilestone);\r\n          const index = this.milestones.findIndex(m => m._id === this.newMilestone._id);\r\n          if (index !== -1) {\r\n            this.milestones.splice(index, 1, this.newMilestone);\r\n          }\r\n          this.resetForm();\r\n        } catch (error) {\r\n          console.error('Greška prilikom ažuriranja milestone-a:', error);\r\n        }\r\n      },\r\n      async deleteMilestone(id) {\r\n        try {\r\n          await api.delete(`/milestones/${id}`);\r\n          this.milestones = this.milestones.filter(m => m._id !== id);\r\n        } catch (error) {\r\n          console.error('Greška prilikom brisanja milestone-a:', error);\r\n        }\r\n      },\r\n      editMilestone(milestone) {\r\n        this.newMilestone = { ...milestone };\r\n        this.isEditing = true;\r\n      },\r\n      resetForm() {\r\n        this.newMilestone = { milestoneType: '', milestoneDate: '', progress: '', notes: '' };\r\n        this.isEditing = false;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  li {\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAUM,c,0BATJC,mBAAA,CAA4B,YAAxB,qBAAmB,sBACbC,KAAA,CAAAC,UAAU,CAACC,MAAM,I,cAA3BJ,mBAAA,CAMK,MATXK,UAAA,I,kBAIQL,mBAAA,CAIKM,SAAA,QARbC,WAAA,CAIgCL,KAAA,CAAAC,UAAU,EAAvBK,SAAS;yBAApBR,mBAAA,CAIK;MAJgCD,GAAG,EAAES,SAAS,CAACC;QAClDR,mBAAA,CAA8C,gBAAAS,gBAAA,CAAnCF,SAAS,CAACG,aAAa,kBAL5CC,gBAAA,CAKwD,KAAG,GAAAF,gBAAA,CAAGF,SAAS,CAACK,aAAa,IAAG,GAC9E,iBAAAZ,mBAAA,CAA+B,WAAAS,gBAAA,CAAzBF,SAAS,CAACM,QAAQ,kBACxBb,mBAAA,CAA4B,WAAAS,gBAAA,CAAtBF,SAAS,CAACO,KAAK,iB;qDAGzBf,mBAAA,CAAwC,KAV9CgB,UAAA,EAUgB,4BAA0B,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}