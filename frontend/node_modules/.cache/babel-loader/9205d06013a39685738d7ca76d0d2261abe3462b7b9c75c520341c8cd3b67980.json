{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: ['childId'],\n  // Receive childId as a prop from the route\n\n  data() {\n    return {\n      newMilestone: {\n        milestoneType: '',\n        milestoneDate: '',\n        progress: '',\n        notes: '',\n        childId: this.childId // Use childId in the milestone form\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitMilestone() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.errorMessage = 'Morate biti ulogovani da biste dodali podatke.';\n        return;\n      }\n      try {\n        const response = await axios.post(`http://localhost:5000/api/milestones`, this.newMilestone, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Milestone successfully added:', response);\n        this.$router.push(`/child-development-list/${this.childId}`); // Redirect after saving milestone\n      } catch (error) {\n        console.error('Failed to save milestone:', error);\n        this.errorMessage = 'Greška pri dodavanju milestone-a.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","newMilestone","milestoneType","milestoneDate","progress","notes","childId","errorMessage","methods","submitMilestone","token","localStorage","getItem","response","post","headers","Authorization","console","log","$router","push","error"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\MilestoneForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Dodaj Milestone za Dete</h2>\r\n    <form @submit.prevent=\"submitMilestone\">\r\n      <!-- Add fields for milestone data -->\r\n      <input v-model=\"newMilestone.milestoneType\" placeholder=\"Milestone Type\" required />\r\n      <input v-model=\"newMilestone.milestoneDate\" placeholder=\"Milestone Date\" required />\r\n      <textarea v-model=\"newMilestone.progress\" placeholder=\"Progress\"></textarea>\r\n      <textarea v-model=\"newMilestone.notes\" placeholder=\"Notes\"></textarea>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: ['childId'],  // Receive childId as a prop from the route\r\n\r\n  data() {\r\n    return {\r\n      newMilestone: {\r\n        milestoneType: '',\r\n        milestoneDate: '',\r\n        progress: '',\r\n        notes: '',\r\n        childId: this.childId  // Use childId in the milestone form\r\n      },\r\n      errorMessage: ''\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async submitMilestone() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'Morate biti ulogovani da biste dodali podatke.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          `http://localhost:5000/api/milestones`,\r\n          this.newMilestone,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        console.log('Milestone successfully added:', response);\r\n        this.$router.push(`/child-development-list/${this.childId}`);  // Redirect after saving milestone\r\n      } catch (error) {\r\n        console.error('Failed to save milestone:', error);\r\n        this.errorMessage = 'Greška pri dodavanju milestone-a.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style lang=\"scss\">\r\n.milestone-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f7f7f7;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .error-message {\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n    background-color: #f8d7da;\r\n    border: 1px solid #f5c6cb;\r\n    color: #721c24;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .milestone-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .form-group {\r\n      margin-bottom: 15px;\r\n\r\n      label {\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        color: #333;\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      input,\r\n      textarea {\r\n        width: 100%;\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 5px;\r\n        box-sizing: border-box;\r\n      }\r\n\r\n      textarea {\r\n        height: 100px;\r\n        resize: vertical;\r\n      }\r\n    }\r\n\r\n    .submit-group {\r\n      display: flex;\r\n      justify-content: center;\r\n      \r\n      .submit-btn {\r\n        padding: 12px 20px;\r\n        font-size: 16px;\r\n        color: #fff;\r\n        background-color: #007bff;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s ease;\r\n\r\n        &:hover {\r\n          background-color: #0056b3;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAeA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,SAAS,CAAC;EAAG;;EAErBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,IAAI,CAACA,OAAM,CAAG;MACzB,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,IAAI,CAACH,YAAW,GAAI,gDAAgD;QACpE;MACF;MAEA,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAC/B,sCAAsC,EACtC,IAAI,CAACb,YAAY,EACjB;UACEc,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CACF,CAAC;QACDO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,QAAQ,CAAC;QACtD,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,2BAA2B,IAAI,CAACd,OAAO,EAAE,CAAC,EAAG;MACjE,EAAE,OAAOe,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACd,YAAW,GAAI,mCAAmC;MACzD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}