{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"development-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  class: \"debug-info\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"available-periods\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"period-status\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"period-status current\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"period-status past clickable\"\n};\nconst _hoisted_9 = {\n  key: 3,\n  class: \"period-status future\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Pregled Razvoja Deteta\", -1 /* HOISTED */)), _createCommentVNode(\" Debugging Logs \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Starost deteta:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.childAge) + \" meseci\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Izabrani period:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedPeriod ? $options.formatPeriod($data.selectedPeriod.start, $data.selectedPeriod.end) : 'Nijedan'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Dostupni periodi:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.availablePeriods), 1 /* TEXT */)])]), _createCommentVNode(\" Period selector \"), $data.availablePeriods.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Dostupni periodi:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.availablePeriods, (period, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass({\n        'period-item': true,\n        'filled': $options.isPeriodFilled(period),\n        'current': $options.isCurrentPeriod(period),\n        'past': $options.isPastPeriod(period),\n        'future': $options.isFuturePeriod(period),\n        'clickable': !$options.isFuturePeriod(period),\n        'selected': $data.selectedPeriod && $data.selectedPeriod.start === period.start\n      }),\n      onClick: $event => $options.handlePeriodClick(period)\n    }, [_createTextVNode(_toDisplayString($options.formatPeriod(period.start, period.end)) + \" \", 1 /* TEXT */), $options.isPeriodFilled(period) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"(Ispunjeno ✅)\")) : $options.isCurrentPeriod(period) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"(Trenutni period 🟢)\")) : $options.isPastPeriod(period) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"(Kliknite da unesete 🔄)\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"(Nije još dostupno 🚫)\"))], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","error","_hoisted_2","_toDisplayString","_createCommentVNode","_createElementVNode","_hoisted_3","_createTextVNode","childAge","selectedPeriod","$options","formatPeriod","start","end","availablePeriods","length","_hoisted_4","_Fragment","_renderList","period","index","_normalizeClass","isPeriodFilled","isCurrentPeriod","isPastPeriod","isFuturePeriod","onClick","$event","handlePeriodClick","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_5"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n\r\n    <h2>Pregled Razvoja Deteta</h2>\r\n\r\n    <!-- Debugging Logs -->\r\n    <div class=\"debug-info\">\r\n      <p><strong>Starost deteta:</strong> {{ childAge }} meseci</p>\r\n      <p><strong>Izabrani period:</strong> {{ selectedPeriod ? formatPeriod(selectedPeriod.start, selectedPeriod.end) : 'Nijedan' }}</p>\r\n      <p><strong>Dostupni periodi:</strong> {{ availablePeriods }}</p>\r\n    </div>\r\n\r\n    <!-- Period selector -->\r\n    <div class=\"available-periods\" v-if=\"availablePeriods.length > 0\">\r\n      <h3>Dostupni periodi:</h3>\r\n      <ul>\r\n        <li v-for=\"(period, index) in availablePeriods\" \r\n            :key=\"index\" \r\n            :class=\"{ \r\n              'period-item': true,\r\n              'filled': isPeriodFilled(period),\r\n              'current': isCurrentPeriod(period),\r\n              'past': isPastPeriod(period),\r\n              'future': isFuturePeriod(period),\r\n              'clickable': !isFuturePeriod(period),\r\n              'selected': selectedPeriod && selectedPeriod.start === period.start\r\n            }\"\r\n            @click=\"handlePeriodClick(period)\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isPeriodFilled(period)\" class=\"period-status\">(Ispunjeno ✅)</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\" class=\"period-status current\">(Trenutni period 🟢)</span>\r\n          <span v-else-if=\"isPastPeriod(period)\" class=\"period-status past clickable\">(Kliknite da unesete 🔄)</span>\r\n          <span v-else class=\"period-status future\">(Nije još dostupno 🚫)</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return { \r\n      developmentData: [], // ✅ Ensure it's initialized\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      childAge: null, \r\n      selectedPeriod: null,\r\n      error: null,\r\n      loading: true,\r\n      showMilestoneForm: false\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async fetchChildAge(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5000/api/children/${childId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        if (response.data.birthDate) {\r\n          const birthDate = new Date(response.data.birthDate);\r\n          this.childAge = this.calculateAgeInMonths(birthDate);\r\n\r\n          console.log('🟢 Datum rođenja deteta:', birthDate);\r\n          console.log('📌 Izračunata starost deteta u mesecima:', this.childAge);\r\n        } else {\r\n          console.warn(\"⚠️ Datum rođenja nije pronađen u API odgovoru.\");\r\n          this.childAge = 0;\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Greška prilikom dobijanja starosti deteta:', error);\r\n        this.childAge = 0; // Default to 0 if error occurs\r\n      }\r\n    },\r\n\r\n    calculateAgeInMonths(birthDate) {\r\n      const birth = new Date(birthDate);\r\n      const now = new Date();\r\n      return (now.getFullYear() - birth.getFullYear()) * 12 + (now.getMonth() - birth.getMonth());\r\n    },\r\n\r\n    generateAvailablePeriods() {\r\n      if (this.childAge === null) {\r\n        console.warn(\"⚠️ Starost deteta nije postavljena, preskačem generisanje perioda.\");\r\n        return;\r\n      }\r\n\r\n      this.availablePeriods = [];\r\n      for (let i = 0; i <= 72; i += 6) {\r\n        this.availablePeriods.push({ start: i, end: i + 6 });\r\n      }\r\n\r\n      console.log(\"✅ Generisani dostupni periodi:\", this.availablePeriods);\r\n    },\r\n\r\n    isCurrentPeriod(period) {\r\n      console.log(`📌 Provera da li je ${period.start}-${period.end} trenutni period za starost ${this.childAge}`);\r\n      return this.childAge !== null && period.start <= this.childAge && period.end > this.childAge;\r\n    },\r\n\r\n    isPastPeriod(period) {\r\n      console.log(`🔄 Provera da li je ${period.start}-${period.end} prošli period za starost ${this.childAge}`);\r\n      return this.childAge !== null && period.end <= this.childAge;\r\n    },\r\n\r\n    isFuturePeriod(period) {\r\n      console.log(`🚫 Provera da li je ${period.start}-${period.end} budući period za starost ${this.childAge}`);\r\n      return this.childAge !== null && period.start > this.childAge;\r\n    },\r\n\r\n    formatPeriod(start, end) {\r\n      return `${start}-${end} meseci`;\r\n    },\r\n\r\n    isPeriodFilled(period) {\r\n      if (!this.developmentData) return false;\r\n\r\n      const filled = this.developmentData.some(dev =>\r\n        dev.startAge === period.start && dev.endAge === period.end\r\n      );\r\n\r\n      console.log(`🔍 Provera da li je period ${period.start}-${period.end} popunjen:`, filled);\r\n      return filled;\r\n    },\r\n\r\n    handlePeriodClick(period) {\r\n      console.log(`🟢 Kliknut period: ${period.start}-${period.end}`);\r\n\r\n      if (this.isFuturePeriod(period)) {\r\n        console.warn(\"🚫 Budući periodi još nisu dostupni.\");\r\n        return;\r\n      }\r\n\r\n      const childId = this.$route.params.childId;\r\n      \r\n      if (this.isPeriodFilled(period)) {\r\n        console.log(\"✅ Period je popunjen, prikazujemo podatke.\");\r\n        this.selectedPeriod = period;\r\n      } else if (this.isCurrentPeriod(period) || this.isPastPeriod(period)) {\r\n        console.log(\"🔄 Preusmeravanje na unos podataka za izabrani period.\");\r\n        this.$router.push({\r\n          path: `/child-development-form/${childId}`,\r\n          query: { startAge: period.start, endAge: period.end }\r\n        });\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      const childId = this.$route.params.childId;\r\n      if (childId) {\r\n        await this.fetchChildAge(childId);\r\n        this.generateAvailablePeriods(); // ✅ Run only after childAge is set\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Greška u created():', error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.development-container {\r\n  padding: 20px;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  background-color: #fee;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.debug-info {\r\n  background: #f8f9fa;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.available-periods ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.period-item {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  background: #f1f1f1;\r\n  margin: 5px 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  transition: 0.3s;\r\n}\r\n\r\n.period-item:hover {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.current {\r\n  background: #c8e6c9;\r\n  font-weight: bold;\r\n}\r\n\r\n.past {\r\n  background: #ffcc80;\r\n}\r\n\r\n.future {\r\n  background: #eeeeee;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.period-status {\r\n  font-size: 0.9em;\r\n  margin-left: 5px;\r\n}\r\n\r\n.clickable {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAuB;;EADpCC,GAAA;EAEsBD,KAAK,EAAC;;;EAKnBA,KAAK,EAAC;AAAY;;EAP3BC,GAAA;EAcSD,KAAK,EAAC;;mBAdf;;EAAAC,GAAA;EA8B8CD,KAAK,EAAC;;;EA9BpDC,GAAA;EA+BoDD,KAAK,EAAC;;;EA/B1DC,GAAA;EAgCiDD,KAAK,EAAC;;;EAhCvDC,GAAA;EAiCuBD,KAAK,EAAC;;;uBAhC3BE,mBAAA,CAoCM,OApCNC,UAoCM,GAnCOC,KAAA,CAAAC,KAAK,I,cAAhBH,mBAAA,CAAyD,OAAzDI,UAAyD,EAAAC,gBAAA,CAAdH,KAAA,CAAAC,KAAK,oBAFpDG,mBAAA,gB,0BAIIC,mBAAA,CAA+B,YAA3B,wBAAsB,sBAE1BD,mBAAA,oBAAuB,EACvBC,mBAAA,CAIM,OAJNC,UAIM,GAHJD,mBAAA,CAA6D,Y,0BAA1DA,mBAAA,CAAgC,gBAAxB,iBAAe,sBARhCE,gBAAA,CAQyC,GAAC,GAAAJ,gBAAA,CAAGH,KAAA,CAAAQ,QAAQ,IAAG,SAAO,gB,GACzDH,mBAAA,CAAkI,Y,0BAA/HA,mBAAA,CAAiC,gBAAzB,kBAAgB,sBATjCE,gBAAA,CAS0C,GAAC,GAAAJ,gBAAA,CAAGH,KAAA,CAAAS,cAAc,GAAGC,QAAA,CAAAC,YAAY,CAACX,KAAA,CAAAS,cAAc,CAACG,KAAK,EAAEZ,KAAA,CAAAS,cAAc,CAACI,GAAG,8B,GAC9GR,mBAAA,CAAgE,Y,0BAA7DA,mBAAA,CAAkC,gBAA1B,mBAAiB,sBAVlCE,gBAAA,CAU2C,GAAC,GAAAJ,gBAAA,CAAGH,KAAA,CAAAc,gBAAgB,iB,KAG3DV,mBAAA,qBAAwB,EACaJ,KAAA,CAAAc,gBAAgB,CAACC,MAAM,Q,cAA5DjB,mBAAA,CAsBM,OAtBNkB,UAsBM,G,0BArBJX,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAmBK,c,kBAlBHP,mBAAA,CAiBKmB,SAAA,QAlCbC,WAAA,CAiBsClB,KAAA,CAAAc,gBAAgB,EAjBtD,CAiBoBK,MAAM,EAAEC,KAAK;yBAAzBtB,mBAAA,CAiBK;MAhBAD,GAAG,EAAEuB,KAAK;MACVxB,KAAK,EAnBlByB,eAAA;;kBAmBoFX,QAAA,CAAAY,cAAc,CAACH,MAAM;mBAA6BT,QAAA,CAAAa,eAAe,CAACJ,MAAM;gBAA0BT,QAAA,CAAAc,YAAY,CAACL,MAAM;kBAA4BT,QAAA,CAAAe,cAAc,CAACN,MAAM;sBAAgCT,QAAA,CAAAe,cAAc,CAACN,MAAM;oBAA8BnB,KAAA,CAAAS,cAAc,IAAIT,KAAA,CAAAS,cAAc,CAACG,KAAK,KAAKO,MAAM,CAACP;;MASlXc,OAAK,EAAAC,MAAA,IAAEjB,QAAA,CAAAkB,iBAAiB,CAACT,MAAM;QA5B5CZ,gBAAA,CAAAJ,gBAAA,CA6BaO,QAAA,CAAAC,YAAY,CAACQ,MAAM,CAACP,KAAK,EAAEO,MAAM,CAACN,GAAG,KAAI,GAC5C,iBAAYH,QAAA,CAAAY,cAAc,CAACH,MAAM,K,cAAjCrB,mBAAA,CAA8E,QAA9E+B,UAA8E,EAApB,eAAa,KACtDnB,QAAA,CAAAa,eAAe,CAACJ,MAAM,K,cAAvCrB,mBAAA,CAAmG,QAAnGgC,UAAmG,EAA3B,sBAAoB,KAC3EpB,QAAA,CAAAc,YAAY,CAACL,MAAM,K,cAApCrB,mBAAA,CAA2G,QAA3GiC,UAA2G,EAA/B,0BAAwB,M,cACpGjC,mBAAA,CAAuE,QAAvEkC,UAAuE,EAA7B,wBAAsB,G,yBAjC1EC,UAAA;wCAAA7B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}