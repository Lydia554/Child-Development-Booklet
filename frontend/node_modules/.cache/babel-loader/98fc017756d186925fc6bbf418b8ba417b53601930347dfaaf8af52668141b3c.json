{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    childId: {\n      type: String,\n      required: true\n    },\n    milestoneId: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      milestone: {\n        milestoneType: '',\n        milestoneDate: '',\n        progress: '',\n        notes: '',\n        childId: this.childId\n      },\n      isEditing: false\n    };\n  },\n  async created() {\n    // Check if we're in edit mode\n    this.isEditing = !!this.$route.params.milestoneId;\n    if (this.isEditing) {\n      await this.fetchMilestone(this.$route.params.milestoneId);\n    }\n  },\n  methods: {\n    async fetchMilestone(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/milestones/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Format the date for the input field\n        const milestone = response.data;\n        if (milestone.milestoneDate) {\n          milestone.milestoneDate = new Date(milestone.milestoneDate).toISOString().split('T')[0];\n        }\n        this.milestone = milestone;\n      } catch (error) {\n        console.error('Error fetching milestone:', error);\n        alert('Greška pri učitavanju podataka.');\n      }\n    },\n    async submitForm() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const headers = {\n          Authorization: `Bearer ${token}`\n        };\n        let response;\n        if (this.isEditing) {\n          // Update existing milestone\n          response = await axios.put(`http://localhost:5000/api/milestones/${this.$route.params.milestoneId}`, {\n            ...this.milestone,\n            childId: this.childId\n          }, {\n            headers\n          });\n        } else {\n          // Create new milestone\n          response = await axios.post('http://localhost:5000/api/milestones', {\n            ...this.milestone,\n            childId: this.childId\n          }, {\n            headers\n          });\n        }\n        console.log('Server response:', response.data);\n        if (response.data) {\n          alert(this.isEditing ? 'Kljucni momenat uspešno izmenjen!' : 'Kljucni momenat uspešno dodat!');\n          this.$router.push(`/milestone-list/${this.childId}`);\n        } else {\n          throw new Error('No data received from server');\n        }\n      } catch (error) {\n        console.error('Error saving milestone:', error);\n        console.error('Error details:', error.response?.data);\n        alert('Došlo je do greške prilikom čuvanja. Molimo pokušajte ponovo.');\n      }\n    },\n    goBack() {\n      this.$router.push(`/milestone-list/${this.childId}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","props","childId","type","String","required","milestoneId","default","data","milestone","milestoneType","milestoneDate","progress","notes","isEditing","created","$route","params","fetchMilestone","methods","id","token","sessionStorage","getItem","response","get","headers","Authorization","Date","toISOString","split","error","console","alert","submitForm","put","post","log","$router","push","Error","goBack"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\MilestoneForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"milestone-form-container\">\r\n    <h2>{{ isEditing ? 'Izmeni Kljucni Momenat' : 'Dodaj Kljucni Momenat' }}</h2>\r\n    \r\n    <form @submit.prevent=\"submitForm\" class=\"milestone-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"milestoneType\">Tip Kljucnog Momenta:</label>\r\n        <input \r\n          v-model=\"milestone.milestoneType\" \r\n          type=\"text\" \r\n          id=\"milestoneType\" \r\n          required\r\n          placeholder=\"Npr. Prvi korak, Prva reč...\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"milestoneDate\">Datum:</label>\r\n        <input \r\n          v-model=\"milestone.milestoneDate\" \r\n          type=\"date\" \r\n          id=\"milestoneDate\" \r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"progress\">Napredak:</label>\r\n        <textarea \r\n          v-model=\"milestone.progress\" \r\n          id=\"progress\" \r\n          required\r\n          placeholder=\"Opišite napredak...\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"notes\">Napomene:</label>\r\n        <textarea \r\n          v-model=\"milestone.notes\" \r\n          id=\"notes\" \r\n          placeholder=\"Dodatne napomene...\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"button-group\">\r\n        <button type=\"submit\" class=\"submit-btn\">\r\n          {{ isEditing ? 'Sačuvaj Izmene' : 'Dodaj Kljucni Momenat' }}\r\n        </button>\r\n        <button type=\"button\" @click=\"goBack\" class=\"cancel-btn\">Otkaži</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    childId: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    milestoneId: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      milestone: {\r\n        milestoneType: '',\r\n        milestoneDate: '',\r\n        progress: '',\r\n        notes: '',\r\n        childId: this.childId\r\n      },\r\n      isEditing: false\r\n    };\r\n  },\r\n\r\n  async created() {\r\n    // Check if we're in edit mode\r\n    this.isEditing = !!this.$route.params.milestoneId;\r\n    if (this.isEditing) {\r\n      await this.fetchMilestone(this.$route.params.milestoneId);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async fetchMilestone(id) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5000/api/milestones/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        // Format the date for the input field\r\n        const milestone = response.data;\r\n        if (milestone.milestoneDate) {\r\n          milestone.milestoneDate = new Date(milestone.milestoneDate)\r\n            .toISOString()\r\n            .split('T')[0];\r\n        }\r\n        \r\n        this.milestone = milestone;\r\n      } catch (error) {\r\n        console.error('Error fetching milestone:', error);\r\n        alert('Greška pri učitavanju podataka.');\r\n      }\r\n    },\r\n\r\n    async submitForm() {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const headers = { Authorization: `Bearer ${token}` };\r\n        \r\n        let response;\r\n        if (this.isEditing) {\r\n          // Update existing milestone\r\n          response = await axios.put(\r\n            `http://localhost:5000/api/milestones/${this.$route.params.milestoneId}`,\r\n            {\r\n              ...this.milestone,\r\n              childId: this.childId\r\n            },\r\n            { headers }\r\n          );\r\n        } else {\r\n          // Create new milestone\r\n          response = await axios.post(\r\n            'http://localhost:5000/api/milestones',\r\n            {\r\n              ...this.milestone,\r\n              childId: this.childId\r\n            },\r\n            { headers }\r\n          );\r\n        }\r\n\r\n        console.log('Server response:', response.data);\r\n\r\n        if (response.data) {\r\n          alert(this.isEditing ? 'Kljucni momenat uspešno izmenjen!' : 'Kljucni momenat uspešno dodat!');\r\n          this.$router.push(`/milestone-list/${this.childId}`);\r\n        } else {\r\n          throw new Error('No data received from server');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error saving milestone:', error);\r\n        console.error('Error details:', error.response?.data);\r\n        alert('Došlo je do greške prilikom čuvanja. Molimo pokušajte ponovo.');\r\n      }\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.push(`/milestone-list/${this.childId}`);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.milestone-form-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.milestone-form {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #555;\r\n}\r\n\r\ninput, textarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\ntextarea {\r\n  height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.submit-btn, .cancel-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.submit-btn {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}