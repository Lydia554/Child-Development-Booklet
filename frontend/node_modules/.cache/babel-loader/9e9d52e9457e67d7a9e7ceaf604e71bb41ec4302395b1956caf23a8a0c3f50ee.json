{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      developmentData: [],\n      milestoneData: [],\n      availablePeriods: [],\n      childAge: 24,\n      // Hardcoded for testing\n      childBirthDate: null,\n      selectedPeriod: null\n    };\n  },\n  methods: {\n    async fetchChildAge(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/child/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.childBirthDate = new Date(response.data.birthDate);\n        // For now, keeping the hardcoded age\n        // this.calculateCurrentAge();\n      } catch (error) {\n        console.error('Error fetching child age:', error);\n      }\n    },\n    isPeriodFilled(period) {\n      return Array.isArray(this.developmentData) && this.developmentData.some(data => data.startAge === period.start && data.endAge === period.end);\n    },\n    isCurrentPeriod(period) {\n      return period.start === 24; // Current period is 24-30 months\n    },\n    isPastPeriod(period) {\n      return period.end <= 24; // Periods before 24 months are past\n    },\n    isFuturePeriod(period) {\n      return period.start > 24; // Periods after 24 months are future\n    },\n    handlePeriodClick(period) {\n      this.selectedPeriod = period;\n    },\n    generateAvailablePeriods() {\n      const periods = [];\n      for (let i = 0; i <= 72; i += 6) {\n        periods.push({\n          start: i,\n          end: i + 6\n        });\n      }\n      this.availablePeriods = periods;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('sr-RS');\n    },\n    formatPeriod(start, end) {\n      return `${start}-${end} meseci`;\n    },\n    async fetchDevelopmentData(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.developmentData = Array.isArray(response.data) ? response.data : [];\n      } catch (error) {\n        console.error('Error fetching development data:', error);\n        this.developmentData = [];\n      }\n    },\n    async fetchMilestones(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/milestone/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.milestoneData = Array.isArray(response.data) ? response.data : [];\n      } catch (error) {\n        console.error('Error fetching milestones:', error);\n        this.milestoneData = [];\n      }\n    }\n  },\n  computed: {\n    currentPeriodDevelopment() {\n      if (!this.selectedPeriod) return null;\n      return this.developmentData.find(data => data.startAge === this.selectedPeriod.start && data.endAge === this.selectedPeriod.end);\n    },\n    currentPeriodMilestones() {\n      if (!this.selectedPeriod || !this.childBirthDate) return [];\n      return this.milestoneData.filter(milestone => {\n        const milestoneDate = new Date(milestone.date);\n        const milestoneAge = Math.floor((milestoneDate - this.childBirthDate) / (1000 * 60 * 60 * 24 * 30.44));\n        return milestoneAge >= this.selectedPeriod.start && milestoneAge < this.selectedPeriod.end;\n      });\n    }\n  },\n  async created() {\n    const childId = this.$route.params.childId;\n    if (childId) {\n      await this.fetchChildAge(childId);\n      await Promise.all([this.fetchDevelopmentData(childId), this.fetchMilestones(childId)]);\n      this.generateAvailablePeriods();\n\n      // Set initial selected period to current period\n      this.selectedPeriod = this.availablePeriods.find(p => p.start === 24);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","developmentData","milestoneData","availablePeriods","childAge","childBirthDate","selectedPeriod","methods","fetchChildAge","childId","token","sessionStorage","getItem","response","get","headers","Authorization","Date","birthDate","error","console","isPeriodFilled","period","Array","isArray","some","startAge","start","endAge","end","isCurrentPeriod","isPastPeriod","isFuturePeriod","handlePeriodClick","generateAvailablePeriods","periods","i","push","formatDate","date","toLocaleDateString","formatPeriod","fetchDevelopmentData","fetchMilestones","computed","currentPeriodDevelopment","find","currentPeriodMilestones","filter","milestone","milestoneDate","milestoneAge","Math","floor","created","$route","params","Promise","all","p"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <h2>Pregled Razvoja Deteta</h2>\r\n    \r\n    <!-- Period selector -->\r\n    <div class=\"available-periods\">\r\n      <h3>Dostupni periodi:</h3>\r\n      <ul>\r\n        <li v-for=\"(period, index) in availablePeriods\" \r\n            :key=\"index\" \r\n            :class=\"{ \r\n              'period-item': true,\r\n              'filled': isPeriodFilled(period),\r\n              'current': isCurrentPeriod(period),\r\n              'past': isPastPeriod(period),\r\n              'future': isFuturePeriod(period)\r\n            }\"\r\n            @click=\"handlePeriodClick(period)\"\r\n            :style=\"{ cursor: isFuturePeriod(period) ? 'not-allowed' : 'pointer' }\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isPeriodFilled(period)\" class=\"period-status\">(Ispunjeno)</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\" class=\"period-status current\">(Trenutni period)</span>\r\n          <span v-else-if=\"isPastPeriod(period)\" class=\"period-status past\">(Propušten)</span>\r\n          <span v-else class=\"period-status future\">(Nije još dostupno)</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Display selected period data -->\r\n    <div v-if=\"selectedPeriod\" class=\"period-data\">\r\n      <h3>Period: {{ formatPeriod(selectedPeriod.start, selectedPeriod.end) }}</h3>\r\n      \r\n      <!-- Development data -->\r\n      <div v-if=\"currentPeriodDevelopment\" class=\"development-section\">\r\n        <h4>Razvoj</h4>\r\n        <div class=\"development-details\">\r\n          <div class=\"development-item\">\r\n            <h5>Fizički razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.physicalDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Emocionalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.emotionalDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Intelektualni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.intellectualDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Socijalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.socialDevelopment }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Milestones -->\r\n      <div v-if=\"currentPeriodMilestones.length\" class=\"milestones-section\">\r\n        <h4>Ključni Momenti</h4>\r\n        <div class=\"milestone-grid\">\r\n          <div v-for=\"milestone in currentPeriodMilestones\" \r\n               :key=\"milestone._id\" \r\n               class=\"milestone-item\">\r\n            <div class=\"milestone-header\">\r\n              <span class=\"milestone-type\">{{ milestone.milestoneType }}</span>\r\n              <span class=\"milestone-date\">{{ formatDate(milestone.date) }}</span>\r\n            </div>\r\n            <div class=\"milestone-content\">\r\n              <p class=\"milestone-progress\"><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n              <p v-if=\"milestone.notes\" class=\"milestone-notes\">\r\n                <strong>Napomene:</strong> {{ milestone.notes }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"!currentPeriodDevelopment && !currentPeriodMilestones.length\" class=\"no-data\">\r\n        <p>Nema podataka za ovaj period.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return { \r\n      developmentData: [],\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      childAge: 24, // Hardcoded for testing\r\n      childBirthDate: null,\r\n      selectedPeriod: null\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async fetchChildAge(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        \r\n        this.childBirthDate = new Date(response.data.birthDate);\r\n        // For now, keeping the hardcoded age\r\n        // this.calculateCurrentAge();\r\n      } catch (error) {\r\n        console.error('Error fetching child age:', error);\r\n      }\r\n    },\r\n\r\n    isPeriodFilled(period) {\r\n      return Array.isArray(this.developmentData) && \r\n        this.developmentData.some(data => \r\n          data.startAge === period.start && data.endAge === period.end\r\n        );\r\n    },\r\n\r\n    isCurrentPeriod(period) {\r\n      return period.start === 24; // Current period is 24-30 months\r\n    },\r\n\r\n    isPastPeriod(period) {\r\n      return period.end <= 24; // Periods before 24 months are past\r\n    },\r\n\r\n    isFuturePeriod(period) {\r\n      return period.start > 24; // Periods after 24 months are future\r\n    },\r\n\r\n    handlePeriodClick(period) {\r\n      this.selectedPeriod = period;\r\n    },\r\n\r\n    generateAvailablePeriods() {\r\n      const periods = [];\r\n      for (let i = 0; i <= 72; i += 6) {\r\n        periods.push({\r\n          start: i,\r\n          end: i + 6\r\n        });\r\n      }\r\n      this.availablePeriods = periods;\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString('sr-RS');\r\n    },\r\n\r\n    formatPeriod(start, end) {\r\n      return `${start}-${end} meseci`;\r\n    },\r\n\r\n    async fetchDevelopmentData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child-development/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.developmentData = Array.isArray(response.data) ? response.data : [];\r\n      } catch (error) {\r\n        console.error('Error fetching development data:', error);\r\n        this.developmentData = [];\r\n      }\r\n    },\r\n\r\n    async fetchMilestones(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/milestone/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.milestoneData = Array.isArray(response.data) ? response.data : [];\r\n      } catch (error) {\r\n        console.error('Error fetching milestones:', error);\r\n        this.milestoneData = [];\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentPeriodDevelopment() {\r\n      if (!this.selectedPeriod) return null;\r\n      return this.developmentData.find(data => \r\n        data.startAge === this.selectedPeriod.start && \r\n        data.endAge === this.selectedPeriod.end\r\n      );\r\n    },\r\n\r\n    currentPeriodMilestones() {\r\n      if (!this.selectedPeriod || !this.childBirthDate) return [];\r\n      \r\n      return this.milestoneData.filter(milestone => {\r\n        const milestoneDate = new Date(milestone.date);\r\n        const milestoneAge = Math.floor(\r\n          (milestoneDate - this.childBirthDate) / (1000 * 60 * 60 * 24 * 30.44)\r\n        );\r\n        \r\n        return milestoneAge >= this.selectedPeriod.start && \r\n               milestoneAge < this.selectedPeriod.end;\r\n      });\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const childId = this.$route.params.childId;\r\n    if (childId) {\r\n      await this.fetchChildAge(childId);\r\n      await Promise.all([\r\n        this.fetchDevelopmentData(childId),\r\n        this.fetchMilestones(childId)\r\n      ]);\r\n      this.generateAvailablePeriods();\r\n      \r\n      // Set initial selected period to current period\r\n      this.selectedPeriod = this.availablePeriods.find(p => p.start === 24);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.development-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n\r\n  h2 {\r\n    color: #2c3e50;\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n\r\n.available-periods {\r\n  margin-bottom: 30px;\r\n  \r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    gap: 15px;\r\n  }\r\n\r\n  .period-item {\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    background-color: #f8f9fa;\r\n    border: 1px solid #dee2e6;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover:not(.future) {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    &.filled {\r\n      background-color: #e3f2fd;\r\n      border-color: #90caf9;\r\n    }\r\n\r\n    &.current {\r\n      background-color: #e8f5e9;\r\n      border-color: #a5d6a7;\r\n    }\r\n\r\n    &.past {\r\n      background-color: #fff3e0;\r\n      border-color: #ffcc80;\r\n    }\r\n\r\n    &.future {\r\n      background-color: #f5f5f5;\r\n      border-color: #e0e0e0;\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n}\r\n\r\n.period-data {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 25px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n\r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 25px;\r\n    padding-bottom: 15px;\r\n    border-bottom: 2px solid #eee;\r\n  }\r\n\r\n  .development-section, .milestones-section {\r\n    margin-bottom: 30px;\r\n\r\n    h4 {\r\n      color: #1976d2;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .development-details {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 20px;\r\n\r\n    .development-item {\r\n      background-color: #f8f9fa;\r\n      padding: 20px;\r\n      border-radius: 8px;\r\n      border-left: 4px solid #1976d2;\r\n\r\n      h5 {\r\n        color: #2c3e50;\r\n        margin-bottom: 10px;\r\n      }\r\n\r\n      p {\r\n        color: #666;\r\n        line-height: 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  .milestone-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 20px;\r\n\r\n    .milestone-item {\r\n      background-color: #fff;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n      border-left: 4px solid #ff9800;\r\n\r\n      .milestone-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 15px;\r\n        padding-bottom: 10px;\r\n        border-bottom: 1px solid #eee;\r\n\r\n        .milestone-type {\r\n          font-weight: bold;\r\n          color: #2c3e50;\r\n        }\r\n\r\n        .milestone-date {\r\n          color: #666;\r\n          font-size: 0.9em;\r\n        }\r\n      }\r\n\r\n      .milestone-content {\r\n        .milestone-progress {\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .milestone-notes {\r\n          font-style: italic;\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-data {\r\n    text-align: center;\r\n    padding: 30px;\r\n    color: #666;\r\n    font-style: italic;\r\n    background-color: #f8f9fa;\r\n    border-radius: 8px;\r\n  }\r\n}\r\n\r\n.period-status {\r\n  display: inline-block;\r\n  margin-left: 8px;\r\n  font-size: 0.9em;\r\n  \r\n  &.current {\r\n    color: #4caf50;\r\n  }\r\n  \r\n  &.past {\r\n    color: #ff9800;\r\n  }\r\n  \r\n  &.future {\r\n    color: #9e9e9e;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}