{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nimport MilestoneForm from './MilestoneForm.vue';\nexport default {\n  components: {\n    MilestoneForm\n  },\n  data() {\n    return {\n      developmentData: [],\n      milestoneData: [],\n      availablePeriods: [],\n      childAge: 24,\n      selectedPeriod: null,\n      error: null,\n      loading: true,\n      showMilestoneForm: false\n    };\n  },\n  computed: {\n    currentPeriodDevelopment() {\n      if (!this.selectedPeriod || !Array.isArray(this.developmentData)) {\n        return null;\n      }\n      const development = this.developmentData.find(data => data.startAge === this.selectedPeriod.start && data.endAge === this.selectedPeriod.end);\n      console.log('Current period development:', development);\n      return development;\n    },\n    currentPeriodMilestones() {\n      if (!this.selectedPeriod || !Array.isArray(this.milestoneData)) {\n        console.log('No period selected or no milestone data');\n        return [];\n      }\n      console.log('Filtering milestones for period:', this.selectedPeriod);\n      console.log('Available milestones:', this.milestoneData);\n      const filteredMilestones = this.milestoneData.filter(milestone => {\n        if (!milestone.milestoneDate) {\n          console.log('Milestone has no date:', milestone);\n          return false;\n        }\n        const milestoneDate = new Date(milestone.milestoneDate);\n        const childBirthDate = new Date(this.childBirthDate);\n\n        // Calculate age in months at milestone date\n        const ageInMonths = (milestoneDate.getFullYear() - childBirthDate.getFullYear()) * 12 + (milestoneDate.getMonth() - childBirthDate.getMonth());\n        console.log('Milestone:', milestone.milestoneType, 'Age in months:', ageInMonths);\n\n        // Check if milestone falls within the selected period\n        const isInPeriod = ageInMonths >= this.selectedPeriod.start && ageInMonths < this.selectedPeriod.end;\n        console.log('Is in period:', isInPeriod);\n        return isInPeriod;\n      });\n      console.log('Filtered milestones:', filteredMilestones);\n      return filteredMilestones;\n    }\n  },\n  methods: {\n    async fetchDevelopmentData(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Raw development data:', response.data);\n\n        // Ensure we have the correct data structure\n        if (response.data && Array.isArray(response.data)) {\n          this.developmentData = response.data.map(dev => ({\n            ...dev,\n            startAge: parseInt(dev.startAge),\n            endAge: parseInt(dev.endAge)\n          }));\n        } else {\n          this.developmentData = [];\n        }\n        console.log('Processed development data:', this.developmentData);\n      } catch (error) {\n        console.error('Error fetching development data:', error);\n        this.error = 'Error loading development data';\n        this.developmentData = [];\n      }\n    },\n    isPeriodFilled(period) {\n      return this.developmentData.some(dev => dev.startAge === period.start && dev.endAge === period.end);\n    },\n    handlePeriodClick(period) {\n      if (this.isFuturePeriod(period)) {\n        return;\n      }\n      const childId = this.$route.params.childId;\n      if (this.isPeriodFilled(period)) {\n        // View filled period data\n        this.selectedPeriod = period;\n      } else if (this.isCurrentPeriod(period) || this.isPastPeriod(period)) {\n        // Navigate to development form with correct period\n        this.$router.push({\n          path: `/child-development-form/${childId}`,\n          // Changed from name to path\n          query: {\n            startAge: period.start,\n            endAge: period.end\n          }\n        });\n      }\n    },\n    async fetchChildData() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/children/${this.$route.params.childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.childBirthDate = response.data.birthDate;\n        console.log('Child birth date:', this.childBirthDate);\n      } catch (error) {\n        console.error('Error fetching child data:', error);\n      }\n    },\n    async fetchMilestones(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/milestones/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Milestone response:', response.data);\n        this.milestoneData = Array.isArray(response.data) ? response.data : [];\n        console.log('Fetched milestones:', this.milestoneData);\n      } catch (error) {\n        console.error('Error fetching milestones:', error);\n        this.error = 'Error loading milestones';\n        this.milestoneData = [];\n      }\n    },\n    isCurrentPeriod(period) {\n      return period.start === 24; // Since we know the child is 24 months old\n    },\n    isPastPeriod(period) {\n      return period.end <= 24; // Periods that end before or at 24 months\n    },\n    isFuturePeriod(period) {\n      return period.start > 24; // Periods that start after 24 months\n    },\n    formatPeriod(start, end) {\n      return `${start}-${end} meseci`;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('sr-RS');\n    },\n    generateAvailablePeriods() {\n      this.availablePeriods = [];\n      for (let i = 0; i <= 72; i += 6) {\n        this.availablePeriods.push({\n          start: i,\n          end: i + 6\n        });\n      }\n    },\n    async onMilestoneSaved(milestone) {\n      console.log('Milestone saved:', milestone);\n      this.showMilestoneForm = false;\n      await this.fetchMilestones(this.$route.params.childId);\n    },\n    calculateAgeInMonths(date) {\n      const birthDate = new Date(this.childBirthDate);\n      const months = (date.getFullYear() - birthDate.getFullYear()) * 12;\n      return months + date.getMonth() - birthDate.getMonth();\n    }\n  },\n  async created() {\n    try {\n      const childId = this.$route.params.childId;\n      if (childId) {\n        await this.fetchChildData(); // Get child's birth date first\n        this.generateAvailablePeriods();\n        await Promise.all([this.fetchDevelopmentData(childId), this.fetchMilestones(childId)]);\n\n        // Set initial period from query params if available\n        const startAge = parseInt(this.$route.query.startAge);\n        const endAge = parseInt(this.$route.query.endAge);\n        if (!isNaN(startAge) && !isNaN(endAge)) {\n          this.selectedPeriod = {\n            start: startAge,\n            end: endAge\n          };\n        }\n      }\n    } catch (error) {\n      console.error('Error in created:', error);\n      this.error = 'Error loading data';\n    } finally {\n      this.loading = false;\n    }\n  },\n  watch: {\n    selectedPeriod: {\n      handler(newPeriod) {\n        console.log('Selected period changed:', newPeriod);\n        console.log('Current development data:', this.developmentData);\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["axios","MilestoneForm","components","data","developmentData","milestoneData","availablePeriods","childAge","selectedPeriod","error","loading","showMilestoneForm","computed","currentPeriodDevelopment","Array","isArray","development","find","startAge","start","endAge","end","console","log","currentPeriodMilestones","filteredMilestones","filter","milestone","milestoneDate","Date","childBirthDate","ageInMonths","getFullYear","getMonth","milestoneType","isInPeriod","methods","fetchDevelopmentData","childId","token","sessionStorage","getItem","response","get","headers","Authorization","map","dev","parseInt","isPeriodFilled","period","some","handlePeriodClick","isFuturePeriod","$route","params","isCurrentPeriod","isPastPeriod","$router","push","path","query","fetchChildData","birthDate","fetchMilestones","formatPeriod","formatDate","date","toLocaleDateString","generateAvailablePeriods","i","onMilestoneSaved","calculateAgeInMonths","months","created","Promise","all","isNaN","watch","handler","newPeriod","deep"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    \r\n    <h2>Pregled Razvoja Deteta</h2>\r\n    \r\n    <!-- Period selector -->\r\n    <div class=\"available-periods\">\r\n      <h3>Dostupni periodi:</h3>\r\n      <ul>\r\n        <li v-for=\"(period, index) in availablePeriods\" \r\n            :key=\"index\" \r\n            :class=\"{ \r\n              'period-item': true,\r\n              'filled': isPeriodFilled(period),\r\n              'current': isCurrentPeriod(period),\r\n              'past': isPastPeriod(period),\r\n              'future': isFuturePeriod(period),\r\n              'clickable': !isFuturePeriod(period),\r\n              'selected': selectedPeriod && selectedPeriod.start === period.start\r\n            }\"\r\n            @click=\"handlePeriodClick(period)\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isPeriodFilled(period)\" class=\"period-status\">(Ispunjeno)</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\" class=\"period-status current\">(Trenutni period)</span>\r\n          <span v-else-if=\"isPastPeriod(period)\" class=\"period-status past clickable\">(Kliknite da unesete)</span>\r\n          <span v-else class=\"period-status future\">(Nije još dostupno)</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Display selected period data -->\r\n    <div v-if=\"selectedPeriod && currentPeriodDevelopment\" class=\"period-data\">\r\n      <h3>Period: {{ formatPeriod(selectedPeriod.start, selectedPeriod.end) }}</h3>\r\n      \r\n      <div class=\"development-section\">\r\n        <h4>Razvoj</h4>\r\n        <div class=\"development-details\">\r\n          <div class=\"development-item\">\r\n            <h5>Fizički razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.physicalDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Emocionalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.emotionalDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Intelektualni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.intellectualDevelopment }}</p>\r\n          </div>\r\n          <div class=\"development-item\">\r\n            <h5>Socijalni razvoj</h5>\r\n            <p>{{ currentPeriodDevelopment.socialDevelopment }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Milestones section -->\r\n      <div class=\"milestones-section\" v-if=\"currentPeriodMilestones.length > 0\">\r\n        <h4>Prekretnice za ovaj period</h4>\r\n        <div class=\"milestone-list\">\r\n          <div v-for=\"milestone in currentPeriodMilestones\" \r\n               :key=\"milestone._id\" \r\n               class=\"milestone-item\">\r\n            <div class=\"milestone-header\">\r\n              <h5>{{ milestone.title }}</h5>\r\n              <span class=\"milestone-age\">{{ milestone.age }} meseci</span>\r\n            </div>\r\n            <p>{{ milestone.description }}</p>\r\n            <div class=\"milestone-status\" \r\n                 :class=\"{ achieved: milestone.achieved }\">\r\n              {{ milestone.achieved ? 'Ostvareno' : 'Nije još ostvareno' }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"selectedPeriod\" class=\"no-milestones\">\r\n        Nema kljucnih momenata za ovaj period.\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Milestone Button -->\r\n    <button @click=\"showMilestoneForm = true\" class=\"btn btn-primary\">\r\n      Dodaj Ključni Momenat\r\n    </button>\r\n\r\n    <!-- Milestone Form Modal -->\r\n    <div v-if=\"showMilestoneForm\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <MilestoneForm\r\n          :childId=\"$route.params.childId\"\r\n          @saved=\"onMilestoneSaved\"\r\n          @cancel=\"showMilestoneForm = false\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport MilestoneForm from './MilestoneForm.vue';\r\n\r\nexport default {\r\n  components: {\r\n    MilestoneForm\r\n  },\r\n\r\n  data() {\r\n    return { \r\n      developmentData: [],\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      childAge: 24,\r\n      selectedPeriod: null,\r\n      error: null,\r\n      loading: true,\r\n      showMilestoneForm: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    currentPeriodDevelopment() {\r\n      if (!this.selectedPeriod || !Array.isArray(this.developmentData)) {\r\n        return null;\r\n      }\r\n      \r\n      const development = this.developmentData.find(data => \r\n        data.startAge === this.selectedPeriod.start && \r\n        data.endAge === this.selectedPeriod.end\r\n      );\r\n      \r\n      console.log('Current period development:', development);\r\n      return development;\r\n    },\r\n\r\n    currentPeriodMilestones() {\r\n      if (!this.selectedPeriod || !Array.isArray(this.milestoneData)) {\r\n        console.log('No period selected or no milestone data');\r\n        return [];\r\n      }\r\n      \r\n      console.log('Filtering milestones for period:', this.selectedPeriod);\r\n      console.log('Available milestones:', this.milestoneData);\r\n      \r\n      const filteredMilestones = this.milestoneData.filter(milestone => {\r\n        if (!milestone.milestoneDate) {\r\n          console.log('Milestone has no date:', milestone);\r\n          return false;\r\n        }\r\n\r\n        const milestoneDate = new Date(milestone.milestoneDate);\r\n        const childBirthDate = new Date(this.childBirthDate);\r\n        \r\n        // Calculate age in months at milestone date\r\n        const ageInMonths = ((milestoneDate.getFullYear() - childBirthDate.getFullYear()) * 12) +\r\n                           (milestoneDate.getMonth() - childBirthDate.getMonth());\r\n        \r\n        console.log('Milestone:', milestone.milestoneType, 'Age in months:', ageInMonths);\r\n        \r\n        // Check if milestone falls within the selected period\r\n        const isInPeriod = ageInMonths >= this.selectedPeriod.start && \r\n                          ageInMonths < this.selectedPeriod.end;\r\n        \r\n        console.log('Is in period:', isInPeriod);\r\n        return isInPeriod;\r\n      });\r\n\r\n      console.log('Filtered milestones:', filteredMilestones);\r\n      return filteredMilestones;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async fetchDevelopmentData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child-development/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        \r\n        console.log('Raw development data:', response.data);\r\n        \r\n        // Ensure we have the correct data structure\r\n        if (response.data && Array.isArray(response.data)) {\r\n          this.developmentData = response.data.map(dev => ({\r\n            ...dev,\r\n            startAge: parseInt(dev.startAge),\r\n            endAge: parseInt(dev.endAge)\r\n          }));\r\n        } else {\r\n          this.developmentData = [];\r\n        }\r\n        \r\n        console.log('Processed development data:', this.developmentData);\r\n      } catch (error) {\r\n        console.error('Error fetching development data:', error);\r\n        this.error = 'Error loading development data';\r\n        this.developmentData = [];\r\n      }\r\n    },\r\n\r\n    isPeriodFilled(period) {\r\n      return this.developmentData.some(dev => \r\n        dev.startAge === period.start && \r\n        dev.endAge === period.end\r\n      );\r\n    },\r\n\r\n    handlePeriodClick(period) {\r\n      if (this.isFuturePeriod(period)) {\r\n        return;\r\n      }\r\n\r\n      const childId = this.$route.params.childId;\r\n      \r\n      if (this.isPeriodFilled(period)) {\r\n        // View filled period data\r\n        this.selectedPeriod = period;\r\n      } else if (this.isCurrentPeriod(period) || this.isPastPeriod(period)) {\r\n        // Navigate to development form with correct period\r\n        this.$router.push({\r\n          path: `/child-development-form/${childId}`,  // Changed from name to path\r\n          query: {\r\n            startAge: period.start,\r\n            endAge: period.end\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    async fetchChildData() {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/children/${this.$route.params.childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.childBirthDate = response.data.birthDate;\r\n        console.log('Child birth date:', this.childBirthDate);\r\n      } catch (error) {\r\n        console.error('Error fetching child data:', error);\r\n      }\r\n    },\r\n\r\n    async fetchMilestones(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/milestones/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        console.log('Milestone response:', response.data);\r\n        this.milestoneData = Array.isArray(response.data) ? response.data : [];\r\n        console.log('Fetched milestones:', this.milestoneData);\r\n      } catch (error) {\r\n        console.error('Error fetching milestones:', error);\r\n        this.error = 'Error loading milestones';\r\n        this.milestoneData = [];\r\n      }\r\n    },\r\n\r\n    isCurrentPeriod(period) {\r\n      return period.start === 24; // Since we know the child is 24 months old\r\n    },\r\n\r\n    isPastPeriod(period) {\r\n      return period.end <= 24; // Periods that end before or at 24 months\r\n    },\r\n\r\n    isFuturePeriod(period) {\r\n      return period.start > 24; // Periods that start after 24 months\r\n    },\r\n\r\n    formatPeriod(start, end) {\r\n      return `${start}-${end} meseci`;\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString('sr-RS');\r\n    },\r\n\r\n    generateAvailablePeriods() {\r\n      this.availablePeriods = [];\r\n      for (let i = 0; i <= 72; i += 6) {\r\n        this.availablePeriods.push({\r\n          start: i,\r\n          end: i + 6\r\n        });\r\n      }\r\n    },\r\n\r\n    async onMilestoneSaved(milestone) {\r\n      console.log('Milestone saved:', milestone);\r\n      this.showMilestoneForm = false;\r\n      await this.fetchMilestones(this.$route.params.childId);\r\n    },\r\n\r\n    calculateAgeInMonths(date) {\r\n      const birthDate = new Date(this.childBirthDate);\r\n      const months = (date.getFullYear() - birthDate.getFullYear()) * 12;\r\n      return months + date.getMonth() - birthDate.getMonth();\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      const childId = this.$route.params.childId;\r\n      if (childId) {\r\n        await this.fetchChildData(); // Get child's birth date first\r\n        this.generateAvailablePeriods();\r\n        await Promise.all([\r\n          this.fetchDevelopmentData(childId),\r\n          this.fetchMilestones(childId)\r\n        ]);\r\n        \r\n        // Set initial period from query params if available\r\n        const startAge = parseInt(this.$route.query.startAge);\r\n        const endAge = parseInt(this.$route.query.endAge);\r\n        if (!isNaN(startAge) && !isNaN(endAge)) {\r\n          this.selectedPeriod = { start: startAge, end: endAge };\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in created:', error);\r\n      this.error = 'Error loading data';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    selectedPeriod: {\r\n      handler(newPeriod) {\r\n        console.log('Selected period changed:', newPeriod);\r\n        console.log('Current development data:', this.developmentData);\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.development-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n\r\n  h2 {\r\n    color: #2c3e50;\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  background-color: #fee;\r\n  border-radius: 4px;\r\n}\r\n\r\n.debug-info {\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n  font-size: 0.9em;\r\n  color: #666;\r\n}\r\n\r\n.available-periods {\r\n  margin-bottom: 30px;\r\n  \r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    gap: 15px;\r\n  }\r\n\r\n  .period-item {\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    background-color: #f8f9fa;\r\n    border: 1px solid #dee2e6;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover:not(.future) {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    &.filled {\r\n      background-color: #e3f2fd;\r\n      border-color: #90caf9;\r\n    }\r\n\r\n    &.current {\r\n      background-color: #e8f5e9;\r\n      border-color: #a5d6a7;\r\n    }\r\n\r\n    &.past {\r\n      background-color: #fff3e0;\r\n      border-color: #ffcc80;\r\n    }\r\n\r\n    &.future {\r\n      background-color: #f5f5f5;\r\n      border-color: #e0e0e0;\r\n      opacity: 0.7;\r\n    }\r\n\r\n    &.clickable {\r\n      &:hover {\r\n        background-color: #e3f2fd;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    &.selected {\r\n      background-color: #e3f2fd;\r\n      border-color: #90caf9;\r\n    }\r\n  }\r\n}\r\n\r\n.period-data {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 25px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n\r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 25px;\r\n    padding-bottom: 15px;\r\n    border-bottom: 2px solid #eee;\r\n  }\r\n\r\n  .development-section, .milestones-section {\r\n    margin-bottom: 30px;\r\n\r\n    h4 {\r\n      color: #1976d2;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .development-details {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 20px;\r\n\r\n    .development-item {\r\n      background-color: #f8f9fa;\r\n      padding: 20px;\r\n      border-radius: 8px;\r\n      border-left: 4px solid #1976d2;\r\n\r\n      h5 {\r\n        color: #2c3e50;\r\n        margin-bottom: 10px;\r\n      }\r\n\r\n      p {\r\n        color: #666;\r\n        line-height: 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  .milestone-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 20px;\r\n\r\n    .milestone-item {\r\n      background-color: #fff;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n      border-left: 4px solid #ff9800;\r\n\r\n      .milestone-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 15px;\r\n        padding-bottom: 10px;\r\n        border-bottom: 1px solid #eee;\r\n\r\n        .milestone-type {\r\n          font-weight: bold;\r\n          color: #2c3e50;\r\n        }\r\n\r\n        .milestone-date {\r\n          color: #666;\r\n          font-size: 0.9em;\r\n        }\r\n      }\r\n\r\n      .milestone-content {\r\n        .milestone-progress {\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .milestone-notes {\r\n          font-style: italic;\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-data {\r\n    text-align: center;\r\n    padding: 30px;\r\n    color: #666;\r\n    font-style: italic;\r\n    background-color: #f8f9fa;\r\n    border-radius: 8px;\r\n  }\r\n}\r\n\r\n.period-status {\r\n  display: inline-block;\r\n  margin-left: 8px;\r\n  font-size: 0.9em;\r\n  \r\n  &.current {\r\n    color: #4caf50;\r\n  }\r\n  \r\n  &.past {\r\n    color: #ff9800;\r\n  }\r\n  \r\n  &.future {\r\n    color: #9e9e9e;\r\n  }\r\n\r\n  &.past.clickable {\r\n    color: #2196f3;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.milestones-section {\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n\r\n  h4 {\r\n    margin-bottom: 20px;\r\n    color: #2c3e50;\r\n  }\r\n}\r\n\r\n.milestone-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.milestone-item {\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n\r\n  .milestone-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n\r\n    h5 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .milestone-age {\r\n      font-size: 0.9em;\r\n      color: #666;\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0;\r\n    color: #666;\r\n  }\r\n\r\n  .milestone-status {\r\n    margin-top: 10px;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n    font-size: 0.9em;\r\n    background-color: #f8f9fa;\r\n    color: #666;\r\n\r\n    &.achieved {\r\n      background-color: #d4edda;\r\n      color: #155724;\r\n    }\r\n  }\r\n}\r\n\r\n.no-milestones {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 800px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.btn {\r\n  margin-top: 20px;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}