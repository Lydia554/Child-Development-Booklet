{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      developmentData: [],\n      milestoneData: [],\n      availablePeriods: [],\n      childAge: 0,\n      childBirthDate: null,\n      selectedPeriod: null,\n      error: null\n    };\n  },\n  methods: {\n    async fetchChildAge(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/child/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.childBirthDate = new Date(response.data.birthDate);\n        this.calculateCurrentAge();\n        console.log('Child birth date:', this.childBirthDate);\n        console.log('Calculated age in months:', this.childAge);\n      } catch (error) {\n        console.error('Error fetching child age:', error);\n      }\n    },\n    calculateCurrentAge() {\n      const now = new Date();\n      const birthDate = new Date(this.childBirthDate);\n\n      // Calculate the difference in milliseconds\n      const diffTime = Math.abs(now - birthDate);\n      // Convert to months (approximate)\n      const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30.44));\n      this.childAge = diffMonths;\n      console.log('Raw age calculation:', {\n        now: now.toISOString(),\n        birthDate: birthDate.toISOString(),\n        diffTime,\n        diffMonths\n      });\n    },\n    isPeriodFilled(period) {\n      return Array.isArray(this.developmentData) && this.developmentData.some(data => data.startAge === period.start && data.endAge === period.end);\n    },\n    isCurrentPeriod(period) {\n      // Get the current 6-month period based on child's age\n      const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\n      console.log('Current period calculation:', {\n        childAge: this.childAge,\n        currentPeriodStart,\n        periodStart: period.start\n      });\n      return period.start === currentPeriodStart;\n    },\n    isPastPeriod(period) {\n      const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\n      return period.end <= currentPeriodStart;\n    },\n    isFuturePeriod(period) {\n      const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\n      return period.start > currentPeriodStart;\n    },\n    async fetchDevelopmentData(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.developmentData = Array.isArray(response.data) ? response.data : [];\n        console.log('Development data:', this.developmentData);\n      } catch (error) {\n        console.error('Error fetching development data:', error);\n        this.developmentData = [];\n      }\n    },\n    async fetchMilestones(childId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/milestone/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.milestoneData = Array.isArray(response.data) ? response.data : [];\n        console.log('Milestone data:', this.milestoneData);\n      } catch (error) {\n        console.error('Error fetching milestones:', error);\n        this.milestoneData = [];\n      }\n    },\n    handlePeriodClick(period) {\n      this.selectedPeriod = period;\n      console.log('Selected period:', period);\n    },\n    generateAvailablePeriods() {\n      const periods = [];\n      for (let i = 0; i <= 72; i += 6) {\n        periods.push({\n          start: i,\n          end: i + 6\n        });\n      }\n      this.availablePeriods = periods;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('sr-RS');\n    },\n    formatPeriod(start, end) {\n      return `${start}-${end} meseci`;\n    }\n  },\n  computed: {\n    currentPeriodDevelopment() {\n      if (!this.selectedPeriod || !Array.isArray(this.developmentData)) return null;\n      return this.developmentData.find(data => data.startAge === this.selectedPeriod.start && data.endAge === this.selectedPeriod.end);\n    },\n    currentPeriodMilestones() {\n      if (!this.selectedPeriod || !Array.isArray(this.milestoneData)) return [];\n      return this.milestoneData.filter(milestone => {\n        const milestoneDate = new Date(milestone.date);\n        const milestoneAge = Math.floor((milestoneDate - this.childBirthDate) / (1000 * 60 * 60 * 24 * 30.44));\n        return milestoneAge >= this.selectedPeriod.start && milestoneAge < this.selectedPeriod.end;\n      });\n    }\n  },\n  async created() {\n    const childId = this.$route.params.childId;\n    if (childId) {\n      try {\n        await this.fetchChildAge(childId);\n        await Promise.all([this.fetchDevelopmentData(childId), this.fetchMilestones(childId)]);\n        this.generateAvailablePeriods();\n\n        // Set initial selected period to current period\n        const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\n        this.selectedPeriod = this.availablePeriods.find(p => p.start === currentPeriodStart);\n        console.log('Initial setup complete:', {\n          childAge: this.childAge,\n          currentPeriod: this.selectedPeriod,\n          developmentData: this.developmentData,\n          milestoneData: this.milestoneData\n        });\n      } catch (error) {\n        console.error('Error in setup:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","developmentData","milestoneData","availablePeriods","childAge","childBirthDate","selectedPeriod","error","methods","fetchChildAge","childId","token","sessionStorage","getItem","response","get","headers","Authorization","Date","birthDate","calculateCurrentAge","console","log","now","diffTime","Math","abs","diffMonths","floor","toISOString","isPeriodFilled","period","Array","isArray","some","startAge","start","endAge","end","isCurrentPeriod","currentPeriodStart","periodStart","isPastPeriod","isFuturePeriod","fetchDevelopmentData","fetchMilestones","handlePeriodClick","generateAvailablePeriods","periods","i","push","formatDate","date","toLocaleDateString","formatPeriod","computed","currentPeriodDevelopment","find","currentPeriodMilestones","filter","milestone","milestoneDate","milestoneAge","created","$route","params","Promise","all","p","currentPeriod"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-container\">\r\n    <h2>Pregled Razvoja Deteta</h2>\r\n    \r\n    <!-- Period selector -->\r\n    <div class=\"available-periods\">\r\n      <h3>Dostupni periodi:</h3>\r\n      <ul>\r\n        <li v-for=\"(period, index) in availablePeriods\" \r\n            :key=\"index\" \r\n            :class=\"{ \r\n              'period-item': true,\r\n              'filled': isPeriodFilled(period),\r\n              'current': isCurrentPeriod(period),\r\n              'past': isPastPeriod(period),\r\n              'future': isFuturePeriod(period)\r\n            }\"\r\n            @click=\"handlePeriodClick(period)\">\r\n          {{ formatPeriod(period.start, period.end) }}\r\n          <span v-if=\"isPeriodFilled(period)\" class=\"period-status\">(Ispunjeno)</span>\r\n          <span v-else-if=\"isCurrentPeriod(period)\" class=\"period-status current\">(Trenutni period)</span>\r\n          <span v-else-if=\"isPastPeriod(period)\" class=\"period-status past\">(Propušten)</span>\r\n          <span v-else class=\"period-status future\">(Nije još dostupno)</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Display selected period data -->\r\n    <div v-if=\"selectedPeriod\" class=\"period-data\">\r\n      <h3>Period: {{ formatPeriod(selectedPeriod.start, selectedPeriod.end) }}</h3>\r\n      \r\n      <!-- Development data -->\r\n      <div v-if=\"currentPeriodDevelopment\" class=\"development-section\">\r\n        <h4>Razvoj</h4>\r\n        <p><strong>Fizički razvoj:</strong> {{ currentPeriodDevelopment.physicalDevelopment }}</p>\r\n        <p><strong>Emocionalni razvoj:</strong> {{ currentPeriodDevelopment.emotionalDevelopment }}</p>\r\n        <p><strong>Intelektualni razvoj:</strong> {{ currentPeriodDevelopment.intellectualDevelopment }}</p>\r\n        <p><strong>Socijalni razvoj:</strong> {{ currentPeriodDevelopment.socialDevelopment }}</p>\r\n      </div>\r\n\r\n      <!-- Milestones -->\r\n      <div v-if=\"currentPeriodMilestones.length\" class=\"milestones-section\">\r\n        <h4>Ključni Momenti</h4>\r\n        <div v-for=\"milestone in currentPeriodMilestones\" :key=\"milestone._id\" class=\"milestone-item\">\r\n          <p><strong>Tip:</strong> {{ milestone.milestoneType }}</p>\r\n          <p><strong>Datum:</strong> {{ formatDate(milestone.date) }}</p>\r\n          <p><strong>Napredak:</strong> {{ milestone.progress }}</p>\r\n          <p v-if=\"milestone.notes\"><strong>Napomene:</strong> {{ milestone.notes }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"!currentPeriodDevelopment && !currentPeriodMilestones.length\" class=\"no-data\">\r\n        <p>Nema podataka za ovaj period.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return { \r\n      developmentData: [],\r\n      milestoneData: [],\r\n      availablePeriods: [],\r\n      childAge: 0,\r\n      childBirthDate: null,\r\n      selectedPeriod: null,\r\n      error: null\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async fetchChildAge(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        \r\n        this.childBirthDate = new Date(response.data.birthDate);\r\n        this.calculateCurrentAge();\r\n        console.log('Child birth date:', this.childBirthDate);\r\n        console.log('Calculated age in months:', this.childAge);\r\n      } catch (error) {\r\n        console.error('Error fetching child age:', error);\r\n      }\r\n    },\r\n\r\n    calculateCurrentAge() {\r\n      const now = new Date();\r\n      const birthDate = new Date(this.childBirthDate);\r\n      \r\n      // Calculate the difference in milliseconds\r\n      const diffTime = Math.abs(now - birthDate);\r\n      // Convert to months (approximate)\r\n      const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30.44));\r\n      \r\n      this.childAge = diffMonths;\r\n      console.log('Raw age calculation:', {\r\n        now: now.toISOString(),\r\n        birthDate: birthDate.toISOString(),\r\n        diffTime,\r\n        diffMonths\r\n      });\r\n    },\r\n\r\n    isPeriodFilled(period) {\r\n      return Array.isArray(this.developmentData) && \r\n        this.developmentData.some(data => \r\n          data.startAge === period.start && data.endAge === period.end\r\n        );\r\n    },\r\n\r\n    isCurrentPeriod(period) {\r\n      // Get the current 6-month period based on child's age\r\n      const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\r\n      console.log('Current period calculation:', {\r\n        childAge: this.childAge,\r\n        currentPeriodStart,\r\n        periodStart: period.start\r\n      });\r\n      return period.start === currentPeriodStart;\r\n    },\r\n\r\n    isPastPeriod(period) {\r\n      const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\r\n      return period.end <= currentPeriodStart;\r\n    },\r\n\r\n    isFuturePeriod(period) {\r\n      const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\r\n      return period.start > currentPeriodStart;\r\n    },\r\n\r\n    async fetchDevelopmentData(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/child-development/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.developmentData = Array.isArray(response.data) ? response.data : [];\r\n        console.log('Development data:', this.developmentData);\r\n      } catch (error) {\r\n        console.error('Error fetching development data:', error);\r\n        this.developmentData = [];\r\n      }\r\n    },\r\n\r\n    async fetchMilestones(childId) {\r\n      try {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/milestone/${childId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }\r\n        );\r\n        this.milestoneData = Array.isArray(response.data) ? response.data : [];\r\n        console.log('Milestone data:', this.milestoneData);\r\n      } catch (error) {\r\n        console.error('Error fetching milestones:', error);\r\n        this.milestoneData = [];\r\n      }\r\n    },\r\n\r\n    handlePeriodClick(period) {\r\n      this.selectedPeriod = period;\r\n      console.log('Selected period:', period);\r\n    },\r\n\r\n    generateAvailablePeriods() {\r\n      const periods = [];\r\n      for (let i = 0; i <= 72; i += 6) {\r\n        periods.push({\r\n          start: i,\r\n          end: i + 6\r\n        });\r\n      }\r\n      this.availablePeriods = periods;\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString('sr-RS');\r\n    },\r\n\r\n    formatPeriod(start, end) {\r\n      return `${start}-${end} meseci`;\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentPeriodDevelopment() {\r\n      if (!this.selectedPeriod || !Array.isArray(this.developmentData)) return null;\r\n      return this.developmentData.find(data => \r\n        data.startAge === this.selectedPeriod.start && \r\n        data.endAge === this.selectedPeriod.end\r\n      );\r\n    },\r\n\r\n    currentPeriodMilestones() {\r\n      if (!this.selectedPeriod || !Array.isArray(this.milestoneData)) return [];\r\n      \r\n      return this.milestoneData.filter(milestone => {\r\n        const milestoneDate = new Date(milestone.date);\r\n        const milestoneAge = Math.floor(\r\n          (milestoneDate - this.childBirthDate) / (1000 * 60 * 60 * 24 * 30.44)\r\n        );\r\n        \r\n        return milestoneAge >= this.selectedPeriod.start && \r\n               milestoneAge < this.selectedPeriod.end;\r\n      });\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const childId = this.$route.params.childId;\r\n    if (childId) {\r\n      try {\r\n        await this.fetchChildAge(childId);\r\n        await Promise.all([\r\n          this.fetchDevelopmentData(childId),\r\n          this.fetchMilestones(childId)\r\n        ]);\r\n        this.generateAvailablePeriods();\r\n        \r\n        // Set initial selected period to current period\r\n        const currentPeriodStart = Math.floor(this.childAge / 6) * 6;\r\n        this.selectedPeriod = this.availablePeriods.find(p => p.start === currentPeriodStart);\r\n        \r\n        console.log('Initial setup complete:', {\r\n          childAge: this.childAge,\r\n          currentPeriod: this.selectedPeriod,\r\n          developmentData: this.developmentData,\r\n          milestoneData: this.milestoneData\r\n        });\r\n      } catch (error) {\r\n        console.error('Error in setup:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.development-container {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Arial', sans-serif;\r\n\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 28px;\r\n    color: #333;\r\n    margin-bottom: 30px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .development-item {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    margin-bottom: 25px;\r\n    border-radius: 8px;\r\n    border: 1px solid #ddd;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: translateY(-5px);\r\n      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    h3 {\r\n      font-size: 22px;\r\n      color: #007bff;\r\n      margin-bottom: 15px;\r\n      font-weight: 600;\r\n    }\r\n\r\n    p {\r\n      font-size: 16px;\r\n      color: #555;\r\n      margin: 8px 0;\r\n      line-height: 1.6;\r\n\r\n      strong {\r\n        color: #333;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-data {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #888;\r\n    margin-top: 40px;\r\n  }\r\n\r\n  .error-message {\r\n    color: red;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .available-periods {\r\n    margin-top: 30px;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\r\n    h3 {\r\n      color: #333;\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    ul {\r\n      list-style: none;\r\n      padding: 0;\r\n\r\n      li.period-item {\r\n        cursor: pointer;\r\n        padding: 12px;\r\n        margin: 8px 0;\r\n        border-radius: 4px;\r\n        transition: all 0.3s ease;\r\n\r\n        &:hover {\r\n          background-color: #f0f0f0;\r\n        }\r\n\r\n        &.filled {\r\n          background-color: #e6f7e6;\r\n          border-left: 4px solid #4CAF50;\r\n        }\r\n\r\n        &.current {\r\n          background-color: #e3f2fd;\r\n          border-left: 4px solid #2196F3;\r\n        }\r\n\r\n        &.past {\r\n          background-color: #fff3e0;\r\n          border-left: 4px solid #ff9800;\r\n        }\r\n\r\n        &.future {\r\n          background-color: #f5f5f5;\r\n          cursor: not-allowed;\r\n          color: #999;\r\n        }\r\n\r\n        .period-status {\r\n          font-size: 0.9em;\r\n          margin-left: 10px;\r\n\r\n          &.current {\r\n            color: #2196F3;\r\n          }\r\n\r\n          &.past {\r\n            color: #ff9800;\r\n          }\r\n\r\n          &.future {\r\n            color: #999;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .period-data {\r\n    margin-top: 30px;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\r\n    h3 {\r\n      color: #333;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .development-section, .milestones-section {\r\n      margin-bottom: 20px;\r\n      padding: 15px;\r\n      background-color: #f9f9f9;\r\n      border-radius: 6px;\r\n\r\n      h4 {\r\n        color: #2196F3;\r\n        margin-bottom: 15px;\r\n      }\r\n    }\r\n\r\n    .milestone-item {\r\n      margin-bottom: 15px;\r\n      padding: 10px;\r\n      border-left: 3px solid #2196F3;\r\n      background-color: #fff;\r\n    }\r\n\r\n    .no-data {\r\n      text-align: center;\r\n      color: #666;\r\n      font-style: italic;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}