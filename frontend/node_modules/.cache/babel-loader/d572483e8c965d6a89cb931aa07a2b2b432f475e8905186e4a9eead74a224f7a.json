{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      form: {\n        milestoneDate: '',\n        milestoneType: '',\n        progress: '',\n        notes: ''\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      // Provera da li su obavezna polja popunjena\n      if (!this.form.milestoneDate || !this.form.milestoneType || !this.form.progress) {\n        this.errorMessage = 'Molimo vas da popunite sva obavezna polja.';\n        return;\n      }\n      try {\n        // Slanje podataka na backend\n        const response = await axios.post('http://localhost:5000/api/children/milestones', this.form);\n        console.log('Forma uspešno poslata:', response);\n\n        // Resetovanje forme nakon uspešnog slanja\n        this.form = {\n          milestoneDate: '',\n          milestoneType: '',\n          progress: '',\n          notes: ''\n        };\n        this.errorMessage = '';\n      } catch (error) {\n        // Prikazivanje greške ako dođe do problema prilikom slanja\n        this.errorMessage = 'Došlo je do greške prilikom slanja forme. Molimo pokušajte ponovo.';\n        console.error('Greška prilikom slanja forme:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","milestoneDate","milestoneType","progress","notes","errorMessage","methods","submitForm","response","post","console","log","error"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Unos Razvoja Dete</h2>\r\n      \r\n      <!-- Prikazivanje greške ako je neka obavezna polja prazna -->\r\n      <div v-if=\"errorMessage\" class=\"error-message\">\r\n        {{ errorMessage }}\r\n      </div>\r\n  \r\n      <!-- Forma za unos podataka -->\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div>\r\n          <label for=\"milestoneDate\">Datum Milestone-a:</label>\r\n          <input type=\"date\" v-model=\"form.milestoneDate\" id=\"milestoneDate\" required />\r\n        </div>\r\n        \r\n        <div>\r\n          <label for=\"milestoneType\">Tip Milestone-a:</label>\r\n          <input type=\"text\" v-model=\"form.milestoneType\" id=\"milestoneType\" required />\r\n        </div>\r\n        \r\n        <div>\r\n          <label for=\"progress\">Napredak:</label>\r\n          <textarea v-model=\"form.progress\" id=\"progress\" required></textarea>\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"notes\">Napomene:</label>\r\n          <textarea v-model=\"form.notes\" id=\"notes\"></textarea>\r\n        </div>\r\n  \r\n        <button type=\"submit\">Pošaljite</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          milestoneDate: '',\r\n          milestoneType: '',\r\n          progress: '',\r\n          notes: ''\r\n        },\r\n        errorMessage: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async submitForm() {\r\n        // Provera da li su obavezna polja popunjena\r\n        if (!this.form.milestoneDate || !this.form.milestoneType || !this.form.progress) {\r\n          this.errorMessage = 'Molimo vas da popunite sva obavezna polja.';\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          // Slanje podataka na backend\r\n          const response = await axios.post('http://localhost:5000/api/children/milestones', this.form);\r\n          console.log('Forma uspešno poslata:', response);\r\n          \r\n          // Resetovanje forme nakon uspešnog slanja\r\n          this.form = { milestoneDate: '', milestoneType: '', progress: '', notes: '' };\r\n          this.errorMessage = '';\r\n        } catch (error) {\r\n          // Prikazivanje greške ako dođe do problema prilikom slanja\r\n          this.errorMessage = 'Došlo je do greške prilikom slanja forme. Molimo pokušajte ponovo.';\r\n          console.error('Greška prilikom slanja forme:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .error-message {\r\n    color: red;\r\n    font-weight: bold;\r\n  }\r\n  form {\r\n    margin-top: 20px;\r\n  }\r\n  form div {\r\n    margin-bottom: 10px;\r\n  }\r\n  input, textarea {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin-top: 5px;\r\n  }\r\n  button {\r\n    padding: 10px 15px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAqCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,aAAa,EAAE,EAAE;QACjBC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB;MACA,IAAI,CAAC,IAAI,CAACP,IAAI,CAACC,aAAY,IAAK,CAAC,IAAI,CAACD,IAAI,CAACE,aAAY,IAAK,CAAC,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE;QAC/E,IAAI,CAACE,YAAW,GAAI,4CAA4C;QAChE;MACF;MAEA,IAAI;QACF;QACA,MAAMG,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,+CAA+C,EAAE,IAAI,CAACT,IAAI,CAAC;QAC7FU,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,QAAQ,CAAC;;QAE/C;QACA,IAAI,CAACR,IAAG,GAAI;UAAEC,aAAa,EAAE,EAAE;UAAEC,aAAa,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC;QAC7E,IAAI,CAACC,YAAW,GAAI,EAAE;MACxB,EAAE,OAAOO,KAAK,EAAE;QACd;QACA,IAAI,CAACP,YAAW,GAAI,oEAAoE;QACxFK,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}