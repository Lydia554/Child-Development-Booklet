{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      formData: {\n        startAge: null,\n        endAge: null,\n        physicalDevelopment: '',\n        emotionalDevelopment: '',\n        intellectualDevelopment: '',\n        socialDevelopment: ''\n      },\n      childBirthDate: null,\n      error: null,\n      loading: false,\n      // Error messages for each field\n      physicalError: null,\n      emotionalError: null,\n      intellectualError: null,\n      socialError: null,\n      // Preporučeni ishod razvoja za svaki period\n      recommendedDevelopment: {\n        physicalDevelopment: {\n          min: 0,\n          max: 100\n        },\n        emotionalDevelopment: {\n          min: 0,\n          max: 100\n        },\n        intellectualDevelopment: {\n          min: 0,\n          max: 100\n        },\n        socialDevelopment: {\n          min: 0,\n          max: 100\n        }\n      },\n      // Flag to check if any validation error exists\n      hasErrors: false\n    };\n  },\n  async created() {\n    try {\n      await this.fetchChildData();\n      await this.loadDevelopmentData();\n    } catch (error) {\n      console.error('Error in created:', error);\n      this.error = 'Greška pri učitavanju podataka.';\n    }\n  },\n  methods: {\n    // Funkcija za validaciju unosa\n    validateInput(field) {\n      this.hasErrors = false; // Reset the error flag\n\n      // Upoređivanje sa preporučenim vrednostima\n      const inputValue = parseInt(this.formData[field]);\n\n      // Validacija polja\n      if (inputValue < this.recommendedDevelopment[field].min) {\n        this[`${field}Error`] = `Preporučeni minimum za ${field} je ${this.recommendedDevelopment[field].min}.`;\n        this.hasErrors = true;\n      } else if (inputValue > this.recommendedDevelopment[field].max) {\n        this[`${field}Error`] = `Preporučeni maksimum za ${field} je ${this.recommendedDevelopment[field].max}.`;\n        this.hasErrors = true;\n      } else {\n        this[`${field}Error`] = null; // Reset error if within range\n      }\n    },\n    // Učitavanje podataka o detetu\n    async fetchChildData() {\n      try {\n        const token = localStorage.getItem('token');\n        const childId = this.$route.params.childId;\n        const response = await axios.get(`http://localhost:5000/api/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data && response.data.birthDate) {\n          this.childBirthDate = response.data.birthDate;\n          console.log(\"Child's birth date:\", this.childBirthDate);\n          this.calculateDevelopmentPeriod();\n        }\n      } catch (error) {\n        console.error('Error fetching child data:', error);\n        this.error = 'Greška pri učitavanju podataka o detetu.';\n      }\n    },\n    // Izračunavanje perioda razvoja na osnovu datuma rođenja\n    calculateDevelopmentPeriod() {\n      if (!this.childBirthDate) return;\n      const birthDate = new Date(this.childBirthDate);\n      const today = new Date();\n      const ageInMonths = (today.getFullYear() - birthDate.getFullYear()) * 12 + (today.getMonth() - birthDate.getMonth());\n      const startAge = Math.floor(ageInMonths / 6) * 6;\n      const endAge = startAge + 6;\n      this.formData.startAge = startAge;\n      this.formData.endAge = endAge;\n    },\n    // Učitavanje podataka o razvoju\n    async loadDevelopmentData() {\n      try {\n        const token = localStorage.getItem('token');\n        const childId = this.$route.params.childId;\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data) {\n          const periods = response.data;\n          const currentPeriod = periods.find(p => parseInt(p.startAge) === this.formData.startAge && parseInt(p.endAge) === this.formData.endAge);\n          if (currentPeriod) {\n            this.formData = {\n              startAge: parseInt(currentPeriod.startAge),\n              endAge: parseInt(currentPeriod.endAge),\n              physicalDevelopment: currentPeriod.physicalDevelopment || '',\n              emotionalDevelopment: currentPeriod.emotionalDevelopment || '',\n              intellectualDevelopment: currentPeriod.intellectualDevelopment || '',\n              socialDevelopment: currentPeriod.socialDevelopment || ''\n            };\n          }\n        }\n      } catch (error) {\n        console.error('Error loading development data:', error);\n        this.error = 'Greška pri učitavanju postojećih podataka.';\n      }\n    },\n    // Funkcija za čuvanje podataka\n    async saveDevelopment() {\n      if (this.hasErrors) {\n        this.error = 'Molimo ispravite greške pre nego što pošaljete podatke.';\n        return;\n      }\n      try {\n        this.loading = true;\n        const childId = this.$route.params.childId;\n        const response = await axios.post(`http://localhost:5000/api/child-development/${childId}`, this.formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.data) {\n          this.$router.push({\n            path: `/child-development-list/${childId}`,\n            query: {\n              startAge: this.formData.startAge,\n              endAge: this.formData.endAge\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error saving development:', error);\n        this.error = 'Greška pri čuvanju podataka.';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","startAge","endAge","physicalDevelopment","emotionalDevelopment","intellectualDevelopment","socialDevelopment","childBirthDate","error","loading","physicalError","emotionalError","intellectualError","socialError","recommendedDevelopment","min","max","hasErrors","created","fetchChildData","loadDevelopmentData","console","methods","validateInput","field","inputValue","parseInt","token","localStorage","getItem","childId","$route","params","response","get","headers","Authorization","birthDate","log","calculateDevelopmentPeriod","Date","today","ageInMonths","getFullYear","getMonth","Math","floor","periods","currentPeriod","find","p","saveDevelopment","post","$router","push","path","query"],"sources":["C:\\Users\\goldb\\Pro\\Project\\basic-booklet\\frontend\\src\\components\\ChildDevelopmentForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"development-form\">\r\n    <h2>Unos Razvoja Deteta</h2>\r\n    <h3>Trenutni period: {{ formData.startAge }}-{{ formData.endAge }} meseci</h3>\r\n\r\n    <div v-if=\"error\" class=\"error-message\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <form @submit.prevent=\"saveDevelopment\">\r\n      <div class=\"form-group\">\r\n        <label for=\"physicalDevelopment\">Fizički razvoj:</label>\r\n        <textarea id=\"physicalDevelopment\" v-model=\"formData.physicalDevelopment\" required @input=\"validateInput('physicalDevelopment')\"></textarea>\r\n        <div v-if=\"physicalError\" class=\"error-message\">{{ physicalError }}</div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"emotionalDevelopment\">Emocionalni razvoj:</label>\r\n        <textarea id=\"emotionalDevelopment\" v-model=\"formData.emotionalDevelopment\" required @input=\"validateInput('emotionalDevelopment')\"></textarea>\r\n        <div v-if=\"emotionalError\" class=\"error-message\">{{ emotionalError }}</div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"intellectualDevelopment\">Intelektualni razvoj:</label>\r\n        <textarea id=\"intellectualDevelopment\" v-model=\"formData.intellectualDevelopment\" required @input=\"validateInput('intellectualDevelopment')\"></textarea>\r\n        <div v-if=\"intellectualError\" class=\"error-message\">{{ intellectualError }}</div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"socialDevelopment\">Socijalni razvoj:</label>\r\n        <textarea id=\"socialDevelopment\" v-model=\"formData.socialDevelopment\" required @input=\"validateInput('socialDevelopment')\"></textarea>\r\n        <div v-if=\"socialError\" class=\"error-message\">{{ socialError }}</div>\r\n      </div>\r\n\r\n      <button type=\"submit\" :disabled=\"loading || hasErrors\">\r\n        {{ loading ? 'Čuvanje...' : 'Sačuvaj' }}\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        startAge: null,\r\n        endAge: null,\r\n        physicalDevelopment: '',\r\n        emotionalDevelopment: '',\r\n        intellectualDevelopment: '',\r\n        socialDevelopment: ''\r\n      },\r\n      childBirthDate: null,\r\n      error: null,\r\n      loading: false,\r\n\r\n      // Error messages for each field\r\n      physicalError: null,\r\n      emotionalError: null,\r\n      intellectualError: null,\r\n      socialError: null,\r\n\r\n      // Preporučeni ishod razvoja za svaki period\r\n      recommendedDevelopment: {\r\n        physicalDevelopment: { min: 0, max: 100 },\r\n        emotionalDevelopment: { min: 0, max: 100 },\r\n        intellectualDevelopment: { min: 0, max: 100 },\r\n        socialDevelopment: { min: 0, max: 100 }\r\n      },\r\n\r\n      // Flag to check if any validation error exists\r\n      hasErrors: false\r\n    };\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      await this.fetchChildData();\r\n      await this.loadDevelopmentData();\r\n    } catch (error) {\r\n      console.error('Error in created:', error);\r\n      this.error = 'Greška pri učitavanju podataka.';\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // Funkcija za validaciju unosa\r\n    validateInput(field) {\r\n      this.hasErrors = false; // Reset the error flag\r\n\r\n      // Upoređivanje sa preporučenim vrednostima\r\n      const inputValue = parseInt(this.formData[field]);\r\n\r\n      // Validacija polja\r\n      if (inputValue < this.recommendedDevelopment[field].min) {\r\n        this[`${field}Error`] = `Preporučeni minimum za ${field} je ${this.recommendedDevelopment[field].min}.`;\r\n        this.hasErrors = true;\r\n      } else if (inputValue > this.recommendedDevelopment[field].max) {\r\n        this[`${field}Error`] = `Preporučeni maksimum za ${field} je ${this.recommendedDevelopment[field].max}.`;\r\n        this.hasErrors = true;\r\n      } else {\r\n        this[`${field}Error`] = null; // Reset error if within range\r\n      }\r\n    },\r\n\r\n    // Učitavanje podataka o detetu\r\n    async fetchChildData() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const childId = this.$route.params.childId;\r\n\r\n        const response = await axios.get(`http://localhost:5000/api/${childId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        if (response.data && response.data.birthDate) {\r\n          this.childBirthDate = response.data.birthDate;\r\n          console.log(\"Child's birth date:\", this.childBirthDate);\r\n          this.calculateDevelopmentPeriod();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching child data:', error);\r\n        this.error = 'Greška pri učitavanju podataka o detetu.';\r\n      }\r\n    },\r\n\r\n    // Izračunavanje perioda razvoja na osnovu datuma rođenja\r\n    calculateDevelopmentPeriod() {\r\n      if (!this.childBirthDate) return;\r\n\r\n      const birthDate = new Date(this.childBirthDate);\r\n      const today = new Date();\r\n      const ageInMonths = (today.getFullYear() - birthDate.getFullYear()) * 12 + (today.getMonth() - birthDate.getMonth());\r\n\r\n      const startAge = Math.floor(ageInMonths / 6) * 6;\r\n      const endAge = startAge + 6;\r\n\r\n      this.formData.startAge = startAge;\r\n      this.formData.endAge = endAge;\r\n    },\r\n\r\n    // Učitavanje podataka o razvoju\r\n    async loadDevelopmentData() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const childId = this.$route.params.childId;\r\n\r\n        const response = await axios.get(`http://localhost:5000/api/child-development/${childId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        if (response.data) {\r\n          const periods = response.data;\r\n          const currentPeriod = periods.find(p => \r\n            parseInt(p.startAge) === this.formData.startAge &&\r\n            parseInt(p.endAge) === this.formData.endAge\r\n          );\r\n\r\n          if (currentPeriod) {\r\n            this.formData = {\r\n              startAge: parseInt(currentPeriod.startAge),\r\n              endAge: parseInt(currentPeriod.endAge),\r\n              physicalDevelopment: currentPeriod.physicalDevelopment || '',\r\n              emotionalDevelopment: currentPeriod.emotionalDevelopment || '',\r\n              intellectualDevelopment: currentPeriod.intellectualDevelopment || '',\r\n              socialDevelopment: currentPeriod.socialDevelopment || ''\r\n            };\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading development data:', error);\r\n        this.error = 'Greška pri učitavanju postojećih podataka.';\r\n      }\r\n    },\r\n\r\n    // Funkcija za čuvanje podataka\r\n    async saveDevelopment() {\r\n      if (this.hasErrors) {\r\n        this.error = 'Molimo ispravite greške pre nego što pošaljete podatke.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.loading = true;\r\n        const childId = this.$route.params.childId;\r\n\r\n        const response = await axios.post(\r\n          `http://localhost:5000/api/child-development/${childId}`,\r\n          this.formData,\r\n          {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n        );\r\n\r\n        if (response.data) {\r\n          this.$router.push({\r\n            path: `/child-development-list/${childId}`,\r\n            query: {\r\n              startAge: this.formData.startAge,\r\n              endAge: this.formData.endAge\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error saving development:', error);\r\n        this.error = 'Greška pri čuvanju podataka.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n$primary-color: #4CAF50;\r\n$primary-disabled: #cccccc;\r\n$error-bg: #ffebee;\r\n$error-text: red;\r\n$border-color: #ddd;\r\n$text-color: #333;\r\n$background-light: #ffffff;\r\n\r\n.development-form {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: $text-color;\r\n  font-size: 1rem;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  min-height: 120px;\r\n  padding: 12px;\r\n  border: 1px solid $border-color;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  resize: vertical;\r\n}\r\n\r\nbutton {\r\n  padding: 12px 20px;\r\n  background-color: $primary-color;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: darken($primary-color, 10%);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: $primary-disabled;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n.error-message {\r\n  color: $error-text;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  background-color: $error-bg;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n/* 📱 Mobile Styles: Optimized for Phones */\r\n@media (max-width: 768px) {\r\n  .development-form {\r\n    padding: 15px;\r\n  }\r\n\r\n  label {\r\n    font-size: 0.95rem;\r\n  }\r\n\r\n  textarea {\r\n    font-size: 0.95rem;\r\n    padding: 10px;\r\n  }\r\n\r\n  button {\r\n    font-size: 1rem;\r\n    padding: 14px;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n/* 📱 Extra Small Mobile Screens (Max 480px) */\r\n@media (max-width: 480px) {\r\n  .development-form {\r\n    padding: 12px;\r\n  }\r\n\r\n  label {\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  textarea {\r\n    font-size: 0.9rem;\r\n    padding: 10px;\r\n  }\r\n\r\n  button {\r\n    font-size: 0.95rem;\r\n    padding: 12px;\r\n  }\r\n}\r\n\r\n/* 📱 Ultra-Small Mobile Screens (Max 360px) */\r\n@media (max-width: 360px) {\r\n  .development-form {\r\n    padding: 10px;\r\n  }\r\n\r\n  label {\r\n    font-size: 0.85rem;\r\n  }\r\n\r\n  textarea {\r\n    font-size: 0.85rem;\r\n    padding: 8px;\r\n  }\r\n\r\n  button {\r\n    font-size: 0.9rem;\r\n    padding: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;AA0CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,IAAI;QACZC,mBAAmB,EAAE,EAAE;QACvBC,oBAAoB,EAAE,EAAE;QACxBC,uBAAuB,EAAE,EAAE;QAC3BC,iBAAiB,EAAE;MACrB,CAAC;MACDC,cAAc,EAAE,IAAI;MACpBC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,KAAK;MAEd;MACAC,aAAa,EAAE,IAAI;MACnBC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,WAAW,EAAE,IAAI;MAEjB;MACAC,sBAAsB,EAAE;QACtBX,mBAAmB,EAAE;UAAEY,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAI,CAAC;QACzCZ,oBAAoB,EAAE;UAAEW,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAI,CAAC;QAC1CX,uBAAuB,EAAE;UAAEU,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAI,CAAC;QAC7CV,iBAAiB,EAAE;UAAES,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAI;MACxC,CAAC;MAED;MACAC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;MAC3B,MAAM,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAClC,EAAE,OAAOZ,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,IAAI,CAACA,KAAI,GAAI,iCAAiC;IAChD;EACF,CAAC;EAEDc,OAAO,EAAE;IACP;IACAC,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACP,SAAQ,GAAI,KAAK,EAAE;;MAExB;MACA,MAAMQ,UAAS,GAAIC,QAAQ,CAAC,IAAI,CAAC1B,QAAQ,CAACwB,KAAK,CAAC,CAAC;;MAEjD;MACA,IAAIC,UAAS,GAAI,IAAI,CAACX,sBAAsB,CAACU,KAAK,CAAC,CAACT,GAAG,EAAE;QACvD,IAAI,CAAC,GAAGS,KAAK,OAAO,IAAI,0BAA0BA,KAAK,OAAO,IAAI,CAACV,sBAAsB,CAACU,KAAK,CAAC,CAACT,GAAG,GAAG;QACvG,IAAI,CAACE,SAAQ,GAAI,IAAI;MACvB,OAAO,IAAIQ,UAAS,GAAI,IAAI,CAACX,sBAAsB,CAACU,KAAK,CAAC,CAACR,GAAG,EAAE;QAC9D,IAAI,CAAC,GAAGQ,KAAK,OAAO,IAAI,2BAA2BA,KAAK,OAAO,IAAI,CAACV,sBAAsB,CAACU,KAAK,CAAC,CAACR,GAAG,GAAG;QACxG,IAAI,CAACC,SAAQ,GAAI,IAAI;MACvB,OAAO;QACL,IAAI,CAAC,GAAGO,KAAK,OAAO,IAAI,IAAI,EAAE;MAChC;IACF,CAAC;IAED;IACA,MAAML,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMQ,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,OAAO;QAE1C,MAAMG,QAAO,GAAI,MAAMnC,KAAK,CAACoC,GAAG,CAAC,6BAA6BJ,OAAO,EAAE,EAAE;UACvEK,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUT,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEF,IAAIM,QAAQ,CAAClC,IAAG,IAAKkC,QAAQ,CAAClC,IAAI,CAACsC,SAAS,EAAE;UAC5C,IAAI,CAAC9B,cAAa,GAAI0B,QAAQ,CAAClC,IAAI,CAACsC,SAAS;UAC7ChB,OAAO,CAACiB,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC/B,cAAc,CAAC;UACvD,IAAI,CAACgC,0BAA0B,CAAC,CAAC;QACnC;MACF,EAAE,OAAO/B,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,IAAI,CAACA,KAAI,GAAI,0CAA0C;MACzD;IACF,CAAC;IAED;IACA+B,0BAA0BA,CAAA,EAAG;MAC3B,IAAI,CAAC,IAAI,CAAChC,cAAc,EAAE;MAE1B,MAAM8B,SAAQ,GAAI,IAAIG,IAAI,CAAC,IAAI,CAACjC,cAAc,CAAC;MAC/C,MAAMkC,KAAI,GAAI,IAAID,IAAI,CAAC,CAAC;MACxB,MAAME,WAAU,GAAI,CAACD,KAAK,CAACE,WAAW,CAAC,IAAIN,SAAS,CAACM,WAAW,CAAC,CAAC,IAAI,EAAC,IAAKF,KAAK,CAACG,QAAQ,CAAC,IAAIP,SAAS,CAACO,QAAQ,CAAC,CAAC,CAAC;MAEpH,MAAM3C,QAAO,GAAI4C,IAAI,CAACC,KAAK,CAACJ,WAAU,GAAI,CAAC,IAAI,CAAC;MAChD,MAAMxC,MAAK,GAAID,QAAO,GAAI,CAAC;MAE3B,IAAI,CAACD,QAAQ,CAACC,QAAO,GAAIA,QAAQ;MACjC,IAAI,CAACD,QAAQ,CAACE,MAAK,GAAIA,MAAM;IAC/B,CAAC;IAED;IACA,MAAMkB,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMO,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,OAAO;QAE1C,MAAMG,QAAO,GAAI,MAAMnC,KAAK,CAACoC,GAAG,CAAC,+CAA+CJ,OAAO,EAAE,EAAE;UACzFK,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUT,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEF,IAAIM,QAAQ,CAAClC,IAAI,EAAE;UACjB,MAAMgD,OAAM,GAAId,QAAQ,CAAClC,IAAI;UAC7B,MAAMiD,aAAY,GAAID,OAAO,CAACE,IAAI,CAACC,CAAA,IACjCxB,QAAQ,CAACwB,CAAC,CAACjD,QAAQ,MAAM,IAAI,CAACD,QAAQ,CAACC,QAAO,IAC9CyB,QAAQ,CAACwB,CAAC,CAAChD,MAAM,MAAM,IAAI,CAACF,QAAQ,CAACE,MACvC,CAAC;UAED,IAAI8C,aAAa,EAAE;YACjB,IAAI,CAAChD,QAAO,GAAI;cACdC,QAAQ,EAAEyB,QAAQ,CAACsB,aAAa,CAAC/C,QAAQ,CAAC;cAC1CC,MAAM,EAAEwB,QAAQ,CAACsB,aAAa,CAAC9C,MAAM,CAAC;cACtCC,mBAAmB,EAAE6C,aAAa,CAAC7C,mBAAkB,IAAK,EAAE;cAC5DC,oBAAoB,EAAE4C,aAAa,CAAC5C,oBAAmB,IAAK,EAAE;cAC9DC,uBAAuB,EAAE2C,aAAa,CAAC3C,uBAAsB,IAAK,EAAE;cACpEC,iBAAiB,EAAE0C,aAAa,CAAC1C,iBAAgB,IAAK;YACxD,CAAC;UACH;QACF;MACF,EAAE,OAAOE,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAI,CAACA,KAAI,GAAI,4CAA4C;MAC3D;IACF,CAAC;IAED;IACA,MAAM2C,eAAeA,CAAA,EAAG;MACtB,IAAI,IAAI,CAAClC,SAAS,EAAE;QAClB,IAAI,CAACT,KAAI,GAAI,yDAAyD;QACtE;MACF;MAEA,IAAI;QACF,IAAI,CAACC,OAAM,GAAI,IAAI;QACnB,MAAMqB,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,OAAO;QAE1C,MAAMG,QAAO,GAAI,MAAMnC,KAAK,CAACsD,IAAI,CAC/B,+CAA+CtB,OAAO,EAAE,EACxD,IAAI,CAAC9B,QAAQ,EACb;UACEmC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUP,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1D,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAED,IAAII,QAAQ,CAAClC,IAAI,EAAE;UACjB,IAAI,CAACsD,OAAO,CAACC,IAAI,CAAC;YAChBC,IAAI,EAAE,2BAA2BzB,OAAO,EAAE;YAC1C0B,KAAK,EAAE;cACLvD,QAAQ,EAAE,IAAI,CAACD,QAAQ,CAACC,QAAQ;cAChCC,MAAM,EAAE,IAAI,CAACF,QAAQ,CAACE;YACxB;UACF,CAAC,CAAC;QACJ;MACF,EAAE,OAAOM,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACA,KAAI,GAAI,8BAA8B;MAC7C,UAAU;QACR,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}